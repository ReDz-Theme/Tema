-- Cria√ß√£o Do Tema Da Janela
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/ReDz-Theme/Tema/refs/heads/main/SHNMAXHUBV4"))()

-- Transpar√™ncia Da Janela
Library:SetTheme("Default") 
Library:SetTransparency(0.1)

-- Cria√ß√£o Da Janela
local Window = Library:MakeWindow({
  Title = "SHNMAXHUB : BROOKHAVEN RP üè°",
  SubTitle = "Por : Shelby",
  LoadText = "SHNMAXHUB",
  Flags = "2026"
})

Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://80691928603261", BackgroundTransparency = 0 }, -- Coloque um ID v√°lido
    Corner = { CornerRadius = UDim.new(0, 10) }
})

local Tab1 = Window:MakeTab({Name = "Home", Icon = "rbxassetid://138700382840270"})

local mensagens = {
    "Voc√™ J√° Viu Tudo Que Temos No Hub? ü§î",
    "Voc√™ sabia que esse Hub foi feito apenas por uma pessoa? üò≤",
    "As pessoas realmente leem isso?",
    "Que Tal Um Fling All?",
    "J√° experimentou todas as fun√ß√µes do Hub? üî•",
    "Voc√™ est√° pronto para dominar o servidor? üíÄ",
    "A divers√£o est√° s√≥ come√ßando! üòà",
    "Algu√©m disse 'Admin Commands'? üëÄ",
    "Ser√° que algu√©m est√° te observando agora? üëÅÔ∏è",
    "Se voc√™ est√° lendo isso, voc√™ √© especial! üéâ",
    "Nova atualiza√ß√£o em breve... Ou ser√° que j√° saiu? ü§´",
    "Quem precisa de regras quando se tem exploits? üòé",
    "O caos est√° a um clique de dist√¢ncia... üí•",
    "Hackear ou n√£o hackear, eis a quest√£o! ü§î",
    
    -- Mensagens do lend√°rio espadachim Shelby
    "N√£o ouse desafiar Shelby.",
    "O Kamui √© certeza de morte.",
    "Das profundezas do c√©u, Shelby observa.",
    "A l√¢mina de Shelby nunca erra.",
    "Sombras caem, Shelby se levanta.",
    "O fim chega silencioso... Assim √© a vontade de Shelby.",
    "Voc√™ j√° ouviu as lendas do espadachim celestial?",
    "Aqueles que enfrentam Shelby n√£o contam hist√≥rias.",
    "O vento sussurra seu nome... Shelby.",
    "Dizem que Shelby venceu batalhas antes mesmo delas come√ßarem."
}

local mensagemAleatoria = mensagens[math.random(1, #mensagens)]

local Section = Tab1:AddSection({mensagemAleatoria})

local playerName = game.Players.LocalPlayer.Name
local Greeting = Tab1:AddSection({"Ol√°, " .. playerName .. "! üî®üë§"})

local Paragraph = Tab1:AddParagraph({"#News", "Atualiza√ß√µes Na Hub Completa."})
local Paragraph = Tab1:AddParagraph({"#Aviso", "Atualiza√ß√µes Seram Reduzidas."})

local Players = game:GetService("Players")

-- Defina o nome do jogador desejado
local targetPlayerName = "Usuario_X1x1x1"
local targetPlayer = Players:FindFirstChild(targetPlayerName)

if targetPlayer then
    local userId = targetPlayer.UserId -- Obt√©m o ID do jogador alvo
    local profileImageUrl = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. userId .. "&width=420&height=420&format=png"

    -- Adicionando a imagem de perfil ao label com o t√≠tulo "Dono do Hub."
    local ImageLabel = Tab1:AddLabel({"Image", "Owner. Por : Shelby ü•±", profileImageUrl})
else
    warn("N√£o foi poss√≠vel encontrar o jogador " .. targetPlayerName)
end

local BombActive = false  -- Vari√°vel para controlar a funcionalidade

Toggle = Tab1:AddToggle({
    Name = "Lag All",
    Default = false,
    Callback = function(Value)
        if Value then 
            -- Ativando a funcionalidade sem delay antes de iniciar
            BombActive = true

            local Player = game.Players.LocalPlayer
            local Character = Player.Character or Player.CharacterAdded:Wait()
            local RootPart = Character:WaitForChild("HumanoidRootPart")
            local WorkspaceService = game:GetService("Workspace")
            local Bomb = WorkspaceService:WaitForChild("WorkspaceCom"):WaitForChild("001_CriminalWeapons"):WaitForChild("GiveTools"):WaitForChild("Bomb")

            task.spawn(function()
                while BombActive do
                    if Bomb and RootPart then
                        RootPart.CFrame = Bomb.CFrame
                        fireclickdetector(Bomb.ClickDetector)  -- Acionando o ClickDetector do Bomb
                        task.wait(0.0) 
                    end
                end
            end)
        else
            -- Desativando a funcionalidade
            BombActive = false
        end
    end
})

local Tab2 = Window:MakeTab({Name = "Troll", Icon = "rbxassetid://10734934585"})

local Paragraph = Tab2:AddParagraph({"#Aqui Voc√™ Encontra..", "Fun√ß√µes De Kills/Flings!"})

local Dropdown = Tab2:AddDropdown({
    Name = "Selecione O Jogador.",
    Options = {},
    Default = {},
    MultiSelect = false,
    Callback = function(Value)
        getgenv().Target = Value
    end
})

local function populateDropdown()
    local playersList = {}
    for _, player in pairs(game.Players:GetPlayers()) do
        table.insert(playersList, player.Name)
    end
    Dropdown:Set(playersList, true)
end

game.Players.PlayerAdded:Connect(populateDropdown)
game.Players.PlayerRemoving:Connect(populateDropdown)

populateDropdown()

local function playNotificationSound()
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://112496142134528"
    sound.Volume = 2
    sound.PlayOnRemove = true
    sound.Parent = workspace
    sound:Destroy()
end

local function makeNotification(notification)
    playNotificationSound()
    local Notify = Library:MakeNotify({
        Title = notification.Title,
        Text = notification.Text,
        Time = notification.Time or 5
    })
end

local viewEnabled = false
local characterAddedConnection = nil

local function toggleView(enabled)
    if enabled then
        local targetPlayer = game.Players:FindFirstChild(getgenv().Target)
        if targetPlayer then
            game.Workspace.CurrentCamera.CameraSubject = targetPlayer.Character
            if characterAddedConnection then
                characterAddedConnection:Disconnect()
            end
            characterAddedConnection = targetPlayer.CharacterAdded:Connect(function(character)
                game.Workspace.CurrentCamera.CameraSubject = character
            end)
            makeNotification({
                Title = "Visualizando " .. targetPlayer.Name,
                Text = "Voc√™ est√° visualizando o jogador: " .. targetPlayer.Name,
                Time = 6
            })
        else
            viewEnabled = false
        end
    else
        if characterAddedConnection then
            characterAddedConnection:Disconnect()
            characterAddedConnection = nil
        end
        game.Workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character
        makeNotification({
            Title = "Visualiza√ß√£o Desativada",
            Text = "Voc√™ desativou a visualiza√ß√£o.",
            Time = 6
        })
    end
end

local function setTargetPlayer(playerName)
    getgenv().Target = playerName
end

Tab2:AddToggle({
    Name = "View",
    Default = false,
    Callback = function(Value)
        viewEnabled = Value
        toggleView(Value)
    end
})

local function maintainView()
    while wait() do
        if viewEnabled and getgenv().Target then
            local targetPlayer = game.Players:FindFirstChild(getgenv().Target)
            if targetPlayer and game.Workspace.CurrentCamera.CameraSubject ~= targetPlayer.Character then
                game.Workspace.CurrentCamera.CameraSubject = targetPlayer.Character
            end
        end
    end
end

spawn(maintainView)

setTargetPlayer("Shelby")

game.Players.PlayerRemoving:Connect(function(player)
    if getgenv().Target == player.Name then
        getgenv().Target = nil
        if viewEnabled then
            toggleView(false)
            makeNotification({
                Title = "Jogador Saiu",
                Text = player.Name .. " saiu do jogo. Visualiza√ß√£o desativada.",
                Time = 4
            })
        end
    end
end)

Tab2:AddButton({
    Name = "Goto",
    Callback = function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()

        if getgenv().Target then
            local target = game.Workspace:FindFirstChild(getgenv().Target)
            if target and target:FindFirstChild("HumanoidRootPart") then
                character:MoveTo(target.HumanoidRootPart.Position)
            else
                warn("Alvo inv√°lido ou n√£o encontrado!")
            end
        else
            warn("Nenhum alvo definido em getgenv().Target!")
        end
    end
})

local Section = Tab2:AddSection({"<Small Avatar-"})

Tab2:AddButton({
    Name = "Reiniciar O Tamanho Padr√£o.",
    Callback = function()
        local args = {
            [1] = "CharacterSizeUp",
            [2] = 1
        }
        local remoteEvent = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clothe1s")
        if remoteEvent then
            remoteEvent:FireServer(unpack(args))
        else
            warn("Evento remoto '1Clothe1s' n√£o encontrado em ReplicatedStorage.RE")
        end
    end
})

Tab2:AddButton({
    Name = "Ficar Super Pequeno.",
    Callback = function()
        local args = {
            [1] = "CharacterSizeDown",
            [2] = 4
        }
        local remoteEvent = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Clothe1s")
        if remoteEvent then
            remoteEvent:FireServer(unpack(args))
        else
            warn("Evento remoto '1Clothe1s' n√£o encontrado em ReplicatedStorage.RE")
        end
    end
})

local Section = Tab2:AddSection({"<Combate Sof√°-"})

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Backpack = Player:FindFirstChild("Backpack")
local AllBool = false

getgenv().Target = nil -- Alvo global

local function GetPlayer(Name)
    Name = Name:lower()
    for _, x in next, Players:GetPlayers() do
        if x ~= Player then
            if x.Name:lower():match("^" .. Name) or x.DisplayName:lower():match("^" .. Name) then
                return x
            end
        end
    end
    return nil
end

local function Message(_Title, _Text, Time)
    game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
end

local function EquipCouch()
    if Backpack then
        local Couch = Backpack:FindFirstChild("Couch")
        if Couch then
            Player.Character.Humanoid:EquipTool(Couch)
            Message("Info", "Item Couch equipado!", 3)
        else
            Message("Erro", "Item Couch n√£o encontrado!", 3)
        end
    end
end

local function UnequipCouch()
    if Player.Character then
        local Tool = Player.Character:FindFirstChildOfClass("Tool")
        if Tool and Tool.Name == "Couch" then
            Tool.Parent = Backpack
            Message("Info", "Item Couch desequipado!", 3)
        end
    end
end

local function SkidFling(TargetPlayer)
    if not TargetPlayer then
        return Message("Erro", "Alvo inv√°lido!", 5)
    end

    EquipCouch() -- Equipa o item Couch antes de iniciar o fling

    local Character = Player.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart

    local TCharacter = TargetPlayer.Character
    local TRootPart = TCharacter and TCharacter:FindFirstChild("HumanoidRootPart")

    if not Character or not Humanoid or not RootPart or not TCharacter or not TRootPart then
        return Message("Erro", "Algo deu errado!", 5)
    end

    if RootPart.Velocity.Magnitude < 50 then
        getgenv().OldPos = RootPart.CFrame
    end

    if TCharacter:FindFirstChildWhichIsA("Seat") then
        UnequipCouch() -- Se o alvo estiver sentado, desequipa o Couch
        return Message("Erro", "Alvo j√° est√° sentado!", 5)
    end

    local function FPos(BasePart, Pos, Ang)
        RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
        Character:SetPrimaryPartCFrame(RootPart.CFrame)
        RootPart.Velocity = Vector3.new(1e19, 1e19, 1e19)
    end

    local function SFBasePart(BasePart)
        local StartTime = tick()
        local Angle = 0

        repeat
            Angle = Angle + 100

            local THumanoid = TargetPlayer.Character:FindFirstChildOfClass("Humanoid")
            local TRootPart = TCharacter and TCharacter:FindFirstChild("HumanoidRootPart")

            if THumanoid then
                if TCharacter:FindFirstChildWhichIsA("Seat") then
                    UnequipCouch() -- Se o alvo sentar, desequipa o Couch
                    return Message("Info", "Alvo sentou, Couch desequipado!", 3)
                end

                FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
            else
                -- Comportamento alternativo se o humanoide n√£o for encontrado
                FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(-90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                task.wait()
            end
        until BasePart.Parent ~= TargetPlayer.Character or Humanoid.Health <= 0 or tick() > StartTime + 2 or TCharacter:FindFirstChildWhichIsA("Seat")
    end

    workspace.FallenPartsDestroyHeight = -math.huge

    local BV = Instance.new("BodyVelocity")
    BV.Parent = RootPart
    BV.Velocity = Vector3.new(0, 0, 0)
    BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)

    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

    SFBasePart(TRootPart)

    BV:Destroy()
    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)

    RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
    Humanoid.PlatformStand = true

    task.wait(1)
    Humanoid.PlatformStand = false
end

Tab2:AddButton({
    Name = "Fast - Fling",
    Callback = function()
        if getgenv().Target then
            local TargetPlayer = GetPlayer(getgenv().Target)
            if TargetPlayer then
                SkidFling(TargetPlayer)
            else
                Message("Erro", "Alvo n√£o encontrado!", 5)
            end
        else
            Message("Erro", "Defina um alvo em getgenv().Target!", 5)
        end
    end
})

Tab2:AddButton({
    Name = "Desligar Fast - Fling",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")

        if not RootPart or not Humanoid then
            warn("Nenhum RootPart ou Humanoid encontrado!")
            return
        end

        -- Paralisa completamente o jogador
        Humanoid.PlatformStand = true
        print("Jogador paralisado para reduzir efeitos do spin.")

        -- REMOVE TODA A FOR√áA DO JOGADOR (FLING)
        for _, obj in pairs(RootPart:GetChildren()) do
            if obj:IsA("BodyAngularVelocity") or obj:IsA("BodyVelocity") then
                obj:Destroy()
            end
        end
        print("Spin e for√ßas removidas do jogador.")

        -- Aguarda para garantir que as for√ßas foram dissipadas
        task.wait(1)

        -- TRAVA O JOGADOR NA COORDENADA SEGURA
        local safePos = Vector3.new(0, 1000, 0)

        -- Cria um BodyPosition para segurar o jogador na posi√ß√£o
        local bp = Instance.new("BodyPosition", RootPart)
        bp.Position = safePos
        bp.MaxForce = Vector3.new(math.huge, math.huge, math.huge) -- Segura o jogador na posi√ß√£o

        -- Cria um BodyGyro para evitar que o jogador gire
        local bg = Instance.new("BodyGyro", RootPart)
        bg.CFrame = RootPart.CFrame
        bg.MaxTorque = Vector3.new(math.huge, math.huge, math.huge) -- Mant√©m a rota√ß√£o fixa

        print("Jogador est√° preso na coordenada segura.")

        -- Aguarda um tempo para estabilizar totalmente
        task.wait(3)

        -- Remove os travamentos e libera o jogador
        bp:Destroy()
        bg:Destroy()
        Humanoid.PlatformStand = false

        print("Jogador liberado, seguro na posi√ß√£o.")
    end
})

local Section = Tab2:AddSection({"<Combate Ve√≠culo-"})

Tab2:AddButton({
    Name = "Fling - Boat",
    Callback = function()
        local TargetName = getgenv().Target
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")

        if not TargetName or not Humanoid or not RootPart then
            warn("Target inv√°lido ou jogador sem Humanoid/RootPart")
            return
        end

        -- Fun√ß√£o para spawnar o barco
        local function spawnBoat()
            RootPart.CFrame = CFrame.new(1754, -2, 58)
            task.wait(0.5)
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingBoat", "MilitaryBoatFree")
            task.wait(1)
            return Vehicles:FindFirstChild(Player.Name.."Car")
        end

        -- Garante que o barco foi spawnado
        local PCar = Vehicles:FindFirstChild(Player.Name.."Car") or spawnBoat()
        if not PCar then
            warn("Falha ao spawnar o barco")
            return
        end

        -- Aguarda o assento do barco
        local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
        if not Seat then
            warn("Nenhum assento encontrado no barco")
            return
        end

        -- Tenta sentar no barco
        repeat 
            task.wait(0.1)
            RootPart.CFrame = Seat.CFrame * CFrame.new(0, 1, 0)
        until Humanoid.SeatPart == Seat

        print("Barco spawnado e pronto para a√ß√£o!")

        -- Localiza o jogador alvo
        local TargetPlayer = game.Players:FindFirstChild(TargetName)
        if not TargetPlayer or not TargetPlayer.Character then
            warn("Alvo n√£o encontrado no jogo")
            return
        end

        local TargetC = TargetPlayer.Character
        local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
        local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")

        if not TargetRP or not TargetH then
            warn("Alvo sem Humanoid/RootPart")
            return
        end

        -- Criando o spin no barco (AUMENTADO PARA FLING EXTREMO)
        local Spin = Instance.new("BodyAngularVelocity")
        Spin.Name = "Spinning"
        Spin.Parent = PCar.PrimaryPart
        Spin.MaxTorque = Vector3.new(0, math.huge, 0)
        Spin.AngularVelocity = Vector3.new(0, 369, 0) -- Agora com mais for√ßa!

        print("Spin ativado no barco!")

        -- Fun√ß√£o de movimento do barco (Corrigida)
        local function moveCar(TargetRP, offset)
            if PCar and PCar.PrimaryPart then
                PCar:SetPrimaryPartCFrame(CFrame.new(TargetRP.Position + offset))
            end
        end

        -- Loop para mover o barco at√© o alvo (Corrigido)
        task.spawn(function()
            while PCar and PCar.Parent and TargetRP and TargetRP.Parent do
                task.wait(0.01) -- Menos delay para mais precis√£o
                
                -- Aplicando os movimentos com rota√ß√£o ca√≥tica
                moveCar(TargetRP, Vector3.new(0, 1, 0))  -- Movimento 1
                moveCar(TargetRP, Vector3.new(0, -2.25, 5))  -- Movimento 2
                moveCar(TargetRP, Vector3.new(0, 2.25, 0.25))  -- Movimento 3
                moveCar(TargetRP, Vector3.new(-2.25, -1.5, 2.25))  -- Movimento 4
                moveCar(TargetRP, Vector3.new(0, 1.5, 0))  -- Movimento 5
                moveCar(TargetRP, Vector3.new(0, -1.5, 0))  -- Movimento 6

                -- Aplicando rota√ß√£o extrema no barco
                if PCar and PCar.PrimaryPart then
                    local Rotation = CFrame.Angles(
                        math.rad(math.random(-369, 369)),  
                        math.rad(math.random(-369, 369)), -- Rota√ß√£o EXTREMAMENTE INSANA
                        math.rad(math.random(-369, 369))
                    )
                    PCar:SetPrimaryPartCFrame(CFrame.new(TargetRP.Position + Vector3.new(0, 1.5, 0)) * Rotation)
                end
            end

            -- Se o barco for removido, desativa tudo
            if Spin and Spin.Parent then
                Spin:Destroy()
                print("Spin desativado (Barco removido)")
            end
        end)
    end
})

Tab2:AddButton({
    Name = "Desligar Fling - Boat",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")

        if not RootPart or not Humanoid then
            warn("Nenhum RootPart ou Humanoid encontrado!")
            return
        end

        -- Paralisa completamente o jogador
        Humanoid.PlatformStand = true
        print("Jogador paralisado para reduzir efeitos do spin.")

        -- REMOVE TODA A FOR√áA DO JOGADOR (FLING)
        for _, obj in pairs(RootPart:GetChildren()) do
            if obj:IsA("BodyAngularVelocity") or obj:IsA("BodyVelocity") then
                obj:Destroy()
            end
        end
        print("Spin e for√ßas removidas do jogador.")

        -- Apaga o barco primeiro
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("DeleteAllVehicles")
        task.wait(0.5)  -- Aguarda para garantir que foi removido

        -- Remove o spin do barco, se existir
        local PCar = Vehicles and Vehicles:FindFirstChild(Player.Name.."Car")
        if PCar and PCar.PrimaryPart then
            for _, obj in pairs(PCar.PrimaryPart:GetChildren()) do
                if obj:IsA("BodyAngularVelocity") or obj:IsA("BodyVelocity") then
                    obj:Destroy()
                end
            end
            print("Spin removido do barco.")
        end

        -- Aguarda para garantir que as for√ßas foram dissipadas
        task.wait(1)

        -- TRAVA O JOGADOR NA COORDENADA SEGURA
        local safePos = Vector3.new(0, 1000, 0)

        -- Cria um BodyPosition para segurar o jogador na posi√ß√£o
        local bp = Instance.new("BodyPosition", RootPart)
        bp.Position = safePos
        bp.MaxForce = Vector3.new(math.huge, math.huge, math.huge) -- Segura o jogador na posi√ß√£o

        -- Cria um BodyGyro para evitar que o jogador gire
        local bg = Instance.new("BodyGyro", RootPart)
        bg.CFrame = RootPart.CFrame
        bg.MaxTorque = Vector3.new(math.huge, math.huge, math.huge) -- Mant√©m a rota√ß√£o fixa

        print("Jogador est√° preso na coordenada segura.")

        -- Aguarda um tempo para estabilizar totalmente
        task.wait(3)

        -- Remove os travamentos e libera o jogador
        bp:Destroy()
        bg:Destroy()
        Humanoid.PlatformStand = false

        print("Jogador liberado, seguro na posi√ß√£o.")
    end
})

Tab2:AddButton({
    Name = "Ban - House",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Backpack = Player.Backpack
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Houses = game.Workspace:FindFirstChild("001_Lots")
        local OldPos = RootPart.CFrame
        local Angles = 0
        local YRotation = 0
        local Vehicles = Workspace.Vehicles
        local Pos

        -- Function:
        function Check()
            return Player and Character and Humanoid and RootPart and Vehicles
        end

        -- Main:
        if not getgenv().Target then return end
        if Check() then
            local House = Houses:FindFirstChild(Player.Name.."House")
            if not House then
                local EHouse
                for _, Lot in pairs(Houses:GetChildren()) do
                    if Lot.Name == "For Sale" then
                        for _, num in pairs(Lot:GetDescendants()) do
                            if num:IsA("NumberValue") and num.Name == "Number" and num.Value < 25 and num.Value > 10 then
                                EHouse = Lot
                                break
                            end
                        end
                    end
                end

                local BuyDetector = EHouse:FindFirstChild("BuyHouse")
                Pos = BuyDetector.Position
                if BuyDetector and BuyDetector:IsA("BasePart") then
                    RootPart.CFrame = BuyDetector.CFrame + Vector3.new(0,-6,0)
                    task.wait(.5)
                    local ClickDetector = BuyDetector:FindFirstChild("ClickDetector")
                    if ClickDetector then
                        fireclickdetector(ClickDetector)
                    end
                end
            end

            task.wait(0.5)
            local PreHouse = Houses:FindFirstChild(Player.Name .. "House")
            if PreHouse then
                task.wait(0.5)
                local Number
                for _, x in pairs(PreHouse:GetDescendants()) do
                    if x.Name == "Number" and x:IsA("NumberValue") then
                        Number = x
                    end
                end
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gettin1gHous1e"):FireServer("PickingCustomHouse", "052_House", Number.Value)
            end

            task.wait(0.5)
            local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
            if not PCar then
                if Check() then
                    RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                    task.wait(0.5)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                    task.wait(0.5)
                    PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                    task.wait(0.5)
                    local Seat = PCar and PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end
            end

            task.wait(0.5)
            PCar = Vehicles:FindFirstChild(Player.Name.."Car")
            if PCar then
                if not Humanoid.Sit then
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end

                local Target = game.Players:FindFirstChild(getgenv().Target)
                local TargetC = Target and Target.Character
                local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
                local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

                if TargetC and TargetH and TargetRP then
                    if not TargetH.Sit then
                        while not TargetH.Sit do
                            task.wait()
                            local Fling = function(alvo, pos, angulo)
                                PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)
                            end
                            
                            -- Aumentando a rota√ß√£o progressivamente
                            Angles = Angles + 100
                            YRotation = YRotation + 5000  -- Adicionando rota√ß√£o no eixo Y

                            local Rotation = CFrame.Angles(math.rad(Angles), math.rad(YRotation), 0)

                            Fling(TargetRP, CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                            Fling(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                            Fling(TargetRP, CFrame.new(2.25, 1.5, -2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                            Fling(TargetRP, CFrame.new(-2.25, -1.5, 2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                        end

                        task.wait(0.2)
                        local House = Houses:FindFirstChild(Player.Name.."House")
                        PCar:SetPrimaryPartCFrame(CFrame.new(House.HouseSpawnPosition.Position))
                        task.wait(0.2)
                        local Region = Region3.new(RootPart.Position - Vector3.new(30,30,30), RootPart.Position + Vector3.new(30,30,30))
                        local Parts = workspace:FindPartsInRegion3(Region, RootPart, math.huge)

                        for _, v in pairs(Parts) do
                            if v.Name == "HumanoidRootPart" then
                                local BannedPlayer = game:GetService("Players"):FindFirstChild(v.Parent.Name)
                                local args = { "BanPlayerFromHouse", BannedPlayer, v.Parent }
                                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))

                                local argsDelete = { "DeleteAllVehicles" }
                                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer(unpack(argsDelete))
                            end
                        end
                    end
                end
            end
        end
    end
})

Tab2:AddButton({
    Name = "Car - Jail",
    Callback = function()
        -- Cria um baseplate na coordenada 0, -610, 0
        local baseplate = Instance.new("Part")
        baseplate.Size = Vector3.new(100, 1, 100)  -- Define o tamanho do baseplate
        baseplate.Position = Vector3.new(0, -610, 0)  -- Define a posi√ß√£o
        baseplate.Anchored = true  -- Mant√©m fixo no lugar
        baseplate.Color = Color3.fromRGB(255, 255, 255)  -- Branco
        baseplate.Parent = game.Workspace  -- Adiciona ao Workspace

        local Target = getgenv().Target
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart.CFrame

        if not Target or not Humanoid then return end

        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if not PCar then
            if RootPart and Target then 
                RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                task.wait(0.5)
                PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                task.wait(0.5)
                local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat task.wait()
                        RootPart.CFrame = Seat.CFrame
                    until Humanoid.Sit
                end
            end
        end

        task.wait(0.5)
        PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if PCar and not Humanoid.Sit then
            local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
            if Seat then
                repeat task.wait()
                    RootPart.CFrame = Seat.CFrame
                until Humanoid.Sit
            end
        end

        local TargetPlayer = game.Players:FindFirstChild(getgenv().Target)
        if TargetPlayer then
            local TargetC = TargetPlayer.Character
            local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
            local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

            if TargetC and TargetH and TargetRP then
                if not TargetH.Sit then
                    local Angles = 0
                    local YRotation = 0

                    while not TargetH.Sit do
                        task.wait()

                        -- Mantendo a rota√ß√£o alinhada com a l√≥gica do "Ban - House"
                        Angles = Angles + 100
                        YRotation = YRotation + 5000
                        local Rotation = CFrame.Angles(math.rad(Angles), math.rad(YRotation), 0)

                        -- Fun√ß√£o para movimentar o carro
                        local moveCar = function(alvo, offset)
                            local newPosition = alvo.Position + offset
                            local newCFrame = CFrame.new(newPosition) * Rotation
                            PCar:SetPrimaryPartCFrame(newCFrame)
                        end

                        -- Movimentos do carro ao redor do jogador alvo
                        moveCar(TargetRP, Vector3.new(0, 1, 0))
                        moveCar(TargetRP, Vector3.new(0, -2.25, 5))
                        moveCar(TargetRP, Vector3.new(0, 2.25, 0.25))
                        moveCar(TargetRP, Vector3.new(-2.25, -1.5, 2.25))
                        moveCar(TargetRP, Vector3.new(0, 1.5, 0))
                        moveCar(TargetRP, Vector3.new(0, -1.5, 0))
                    end

                    -- Teleporte final para a "pris√£o"
                    task.wait(0.1)
                    PCar:SetPrimaryPartCFrame(CFrame.new(0, -600, 0))

                    -- Finaliza√ß√£o
                    task.wait(0.2)
                    Humanoid.Sit = false
                    task.wait(0.1)
                    RootPart.CFrame = OldPos
                end
            end
        end
    end
})

Tab2:AddButton({
    Name = "Car - Kill",
    Callback = function()
        local Target = getgenv().Target
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart.CFrame

        if not Target or not Humanoid then return end

        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if not PCar then
            if RootPart and Target then 
                RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                task.wait(0.5)
                PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                task.wait(0.5)
                local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat task.wait()
                        RootPart.CFrame = Seat.CFrame
                    until Humanoid.Sit
                end
            end
        end

        task.wait(0.5)
        PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if PCar and not Humanoid.Sit then
            local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
            if Seat then
                repeat task.wait()
                    RootPart.CFrame = Seat.CFrame
                until Humanoid.Sit
            end
        end

        local TargetPlayer = game.Players:FindFirstChild(getgenv().Target)
        if TargetPlayer then
            local TargetC = TargetPlayer.Character
            local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
            local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

            if TargetC and TargetH and TargetRP then
                if not TargetH.Sit then
                    local Angles = 0
                    local YRotation = 0

                    while not TargetH.Sit do
                        task.wait()

                        -- Mantendo a rota√ß√£o alinhada com a l√≥gica do "Ban - House"
                        Angles = Angles + 100
                        YRotation = YRotation + 5000
                        local Rotation = CFrame.Angles(math.rad(Angles), math.rad(YRotation), 0)

                        -- Fun√ß√£o para movimentar o carro e alinhar o ataque
                        local kill = function(alvo, pos)
                            local newPosition = alvo.Position + pos + (TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.05)
                            local newCFrame = CFrame.new(newPosition) * Rotation
                            PCar:SetPrimaryPartCFrame(newCFrame)
                        end

                        -- Movimentos do carro ao redor do jogador alvo
                        kill(TargetRP, Vector3.new(0, 1, 0))
                        kill(TargetRP, Vector3.new(0, -2.25, 5))
                        kill(TargetRP, Vector3.new(0, 2.25, 0.25))
                        kill(TargetRP, Vector3.new(-2.25, -1.5, 2.25))
                        kill(TargetRP, Vector3.new(0, 1.5, 0))
                        kill(TargetRP, Vector3.new(0, -1.5, 0))
                    end

                    -- Movimenta o carro para longe ao final
                    task.wait(0.1)
                    PCar:SetPrimaryPartCFrame(CFrame.new(0, -470, 0))
                    task.wait(0.2)

                    -- Finaliza√ß√£o
                    Humanoid.Sit = false
                    task.wait(0.1)
                    RootPart.CFrame = OldPos
                end
            end
        end
    end
})

local function bringPlayer()
    local Target = getgenv().Target
    local Player = game.Players.LocalPlayer
    local Character = Player.Character
    local Humanoid = Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Character:FindFirstChild("HumanoidRootPart")
    local Vehicles = game.Workspace:FindFirstChild("Vehicles")
    local OldPos = RootPart.CFrame -- Guardar a posi√ß√£o original do jogador

    if not Target or not Humanoid then return end

    -- Verificar e spawnar o carro se necess√°rio
    local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
    if not PCar then
        if RootPart and Target then
            RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61) -- Teleporte inicial
            task.wait(0.5)
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "PartyBike")
            task.wait(0.5)
            PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
            task.wait(0.5)
            local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
            if Seat then
                repeat task.wait()
                    RootPart.CFrame = Seat.CFrame
                until Humanoid.Sit
            end
        end
    end

    -- Repetir processo se o carro j√° foi criado
    task.wait(0.5)
    PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
    if PCar and not Humanoid.Sit then
        local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
        if Seat then
            repeat task.wait()
                RootPart.CFrame = Seat.CFrame
            until Humanoid.Sit
        end
    end

    -- Encontrar o alvo
    local TargetPlayer = game.Players:FindFirstChild(getgenv().Target)
    local TargetC = TargetPlayer and TargetPlayer.Character
    local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
    local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

    -- Teletransportar e fazer o "bring" no alvo
    if TargetC and TargetH and TargetRP then
        if not TargetH.Sit then
            local Angles = 0
            local YRotation = 0

            while not TargetH.Sit do
                task.wait()

                -- Mantendo a rota√ß√£o alinhada com a l√≥gica do "Ban - House"
                Angles = Angles + 100
                YRotation = YRotation + 5000
                local Rotation = CFrame.Angles(math.rad(Angles), math.rad(YRotation), 0)

                -- Fun√ß√£o para movimentar o carro e alinhar o ataque
                local bring = function(alvo, pos)
                    local newPosition = alvo.Position + pos + (TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.05)
                    local newCFrame = CFrame.new(newPosition) * Rotation
                    PCar:SetPrimaryPartCFrame(newCFrame)
                end

                -- Movimentos do carro ao redor do jogador alvo
                bring(TargetRP, Vector3.new(0, 1, 0))
                bring(TargetRP, Vector3.new(0, -2.25, 5))
                bring(TargetRP, Vector3.new(0, 2.25, 0.25))
                bring(TargetRP, Vector3.new(-2.25, -1.5, 2.25))
                bring(TargetRP, Vector3.new(0, 1.5, 0))
                bring(TargetRP, Vector3.new(0, -1.5, 0))
            end

            -- Quando o alvo sentar, teleportar de volta para a posi√ß√£o antiga
            task.wait(0.1)
            PCar:SetPrimaryPartCFrame(OldPos) -- Aqui o carro vai para a sua posi√ß√£o antiga (OldPos)
            task.wait(0.2)
            Humanoid.Sit = false
            task.wait(0.1)

            -- Executar a fun√ß√£o DeleteAllVehicles ap√≥s 0.5 segundos
            task.wait(0.1)
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("DeleteAllVehicles")
        end
    end
end

-- Adicionando o bot√£o
Tab2:AddButton({
    Name = "Car - Bring",
    Callback = function()
        bringPlayer()
    end
})

local Section = Tab2:AddSection({"<Combate Em Geral-"})

Tab2:AddButton({
    Name = "Fling Boat - All",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character and Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")

        -- Lista de jogadores na whitelist
        local Whitelist = {
            ["kauxz016"] = true,
            ["goduser573"] = true,
            ["NOEL_A21S"] = true,
            ["Usuario_X1x1x1"] = true,
            ["Myst_gamemy34"] = true,
            ["vehshddhdhdhh"] = true,
        }

        if not Humanoid or not RootPart then
            warn("Jogador sem Humanoid/RootPart")
            return
        end

        -- Fun√ß√£o para spawnar o barco
        local function spawnBoat()
            RootPart.CFrame = CFrame.new(1754, -2, 58)
            task.wait(0.5)
            game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingBoat", "PirateFree")
            task.wait(1)
            return Vehicles:FindFirstChild(Player.Name.."Car")
        end

        -- Garante que o barco foi spawnado
        local PCar = Vehicles:FindFirstChild(Player.Name.."Car") or spawnBoat()
        if not PCar then
            warn("Falha ao spawnar o barco")
            return
        end

        -- Aguarda o assento do barco
        local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
        if not Seat then
            warn("Nenhum assento encontrado no barco")
            return
        end

        -- Tenta sentar no barco
        repeat 
            task.wait()
            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
        until Humanoid.Sit

        -- Criando e adicionando o SpinGyro no barco
        local SpinGyro = Instance.new("BodyGyro")
        SpinGyro.Parent = PCar.PrimaryPart
        SpinGyro.MaxTorque = Vector3.new(1e19, 1e19, 1e19) -- Torque maior para maior rota√ß√£o
        SpinGyro.P = 1e19 -- Pot√™ncia aumentada para rota√ß√£o mais r√°pida
        SpinGyro.CFrame = PCar.PrimaryPart.CFrame

        print("SpinGyro ativado no barco! Rota√ß√£o centr√≠fuga aplicada!")

        -- Fun√ß√£o para realizar o fling em um alvo espec√≠fico
        local function flingTarget(TargetPlayer)
            local TargetC = TargetPlayer.Character
            local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
            local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

            if not TargetRP or not TargetH then
                warn("Alvo sem Humanoid/RootPart")
                return
            end

            local angle = 0
            local radius = 5
            local speed = 0.1
            local expansionRate = 0.2

            -- Loop de 3 segundos para o fling no jogador atual
            local startTime = tick()
            while tick() - startTime < 3 and PCar and PCar.Parent do
                task.wait(0.1)

                local offsetX = math.cos(angle) * radius
                local offsetZ = math.sin(angle) * radius
                local moveTo = TargetRP.Position + Vector3.new(offsetX, 0, offsetZ)

                PCar:SetPrimaryPartCFrame(CFrame.new(moveTo) * CFrame.Angles(0, math.rad(180), 0))

                angle = angle + speed
                radius = math.max(radius - expansionRate, 1)

                if (PCar.PrimaryPart.Position - TargetRP.Position).Magnitude < 3 then
                    speed = speed + 0.2
                    expansionRate = expansionRate + 0.1
                end
            end
        end

        -- Loop para alternar entre os jogadores
        task.spawn(function()
            while PCar and PCar.Parent do
                for _, TargetPlayer in pairs(game.Players:GetPlayers()) do
                    if TargetPlayer ~= Player and not Whitelist[TargetPlayer.Name] then
                        flingTarget(TargetPlayer)
                    end
                end
            end
        end)
    end
})

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local Backpack = Player:FindFirstChild("Backpack")
local AllBool = false

getgenv().Target = nil -- Alvo global
local forceActive = false -- Controla se a for√ßa est√° ativa
local BV -- Vari√°vel para armazenar a BodyVelocity

local function GetPlayer(Name)
    Name = Name:lower()
    for _, x in next, Players:GetPlayers() do
        if x ~= Player then
            if x.Name:lower():match("^" .. Name) or x.DisplayName:lower():match("^" .. Name) then
                return x
            end
        end
    end
    return nil
end

local function Message(_Title, _Text, Time)
    game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
end

local function EquipCouch()
    if Backpack then
        local Couch = Backpack:FindFirstChild("Couch")
        if Couch then
            Player.Character.Humanoid:EquipTool(Couch)
            Message("Info", "Item Couch equipado!", 3)
        else
            Message("Erro", "Item Couch n√£o encontrado!", 3)
        end
    end
end

local function UnequipCouch()
    -- N√£o vamos permitir que o Couch seja desequipado
end

local function SkidFling(TargetPlayer)
    if not TargetPlayer then
        return Message("Erro", "Alvo inv√°lido!", 5)
    end

    EquipCouch() -- Equipa o item Couch antes de iniciar o fling

    local Character = Player.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart

    local TCharacter = TargetPlayer.Character
    local TRootPart = TCharacter and TCharacter:FindFirstChild("HumanoidRootPart")

    if not Character or not Humanoid or not RootPart or not TCharacter or not TRootPart then
        return Message("Erro", "Algo deu errado!", 5)
    end

    if RootPart.Velocity.Magnitude < 50 then
        getgenv().OldPos = RootPart.CFrame
    end

    if TCharacter:FindFirstChildWhichIsA("Seat") then
        UnequipCouch() -- Se o alvo estiver sentado, desequipa o Couch
        return Message("Erro", "Alvo j√° est√° sentado!", 5)
    end

    local function FPos(BasePart, Pos, Ang)
        RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
        Character:SetPrimaryPartCFrame(RootPart.CFrame)
        RootPart.Velocity = Vector3.new(1e19, 1e19, 1e19)
    end

    local function SFBasePart(BasePart)
        local StartTime = tick()
        local Angle = 0

        repeat
            Angle = Angle + 100

            local THumanoid = TargetPlayer.Character:FindFirstChildOfClass("Humanoid")
            local TRootPart = TCharacter and TCharacter:FindFirstChild("HumanoidRootPart")

            if THumanoid then
                if TCharacter:FindFirstChildWhichIsA("Seat") then
                    UnequipCouch() -- Se o alvo sentar, desequipa o Couch
                    return Message("Info", "Alvo sentou, Couch desequipado!", 3)
                end

                FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                task.wait()
            else
                -- Comportamento alternativo se o humanoide n√£o for encontrado
                FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(-90), 0, 0))
                task.wait()
                FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                task.wait()
            end
        until BasePart.Parent ~= TargetPlayer.Character or Humanoid.Health <= 0 or tick() > StartTime + 2 or TCharacter:FindFirstChildWhichIsA("Seat")
    end

    workspace.FallenPartsDestroyHeight = -math.huge

    -- Configura a for√ßa (BodyVelocity) para o jogador
    BV = Instance.new("BodyVelocity")
    BV.Parent = RootPart
    BV.Velocity = Vector3.new(0, 0, 0)
    BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)

    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

    SFBasePart(TRootPart)

    -- Deixa a for√ßa ativa at√© o final
    forceActive = true

    BV:Destroy() -- Remove a for√ßa ap√≥s o Fling

    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)

    RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
    Humanoid.PlatformStand = true

    task.wait(1)
    Humanoid.PlatformStand = false
end

local function onDeath()
    -- Interrompe o Fling e a for√ßa se o jogador morrer
    forceActive = false
    if BV then
        BV:Destroy() -- Remove a BodyVelocity
    end
    Message("Erro", "Voc√™ morreu, processo interrompido!", 5)
end

Player.Character:WaitForChild("Humanoid").Died:Connect(onDeath)

Tab2:AddButton({
    Name = "Fast - Fling All",
    Callback = function()
        local players = Players:GetPlayers() -- Pegue todos os jogadores
        local playerIndex = 1 -- √çndice do jogador atual

        local function FlingNextPlayer()
            if playerIndex <= #players then
                local TargetPlayer = players[playerIndex]

                -- Ignora o pr√≥prio jogador
                if TargetPlayer == Player then
                    playerIndex = playerIndex + 1
                    return FlingNextPlayer()
                end

                -- Executa o Fling no jogador
                SkidFling(TargetPlayer)

                -- Executa o c√≥digo adicional (invocar o remoteFunction duas vezes)
                local args = {
                    [1] = "PickingTools",
                    [2] = "Couch"
                }
                
                local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
                if remoteFunction then
                    remoteFunction:InvokeServer(unpack(args)) -- Primeira execu√ß√£o
                    remoteFunction:InvokeServer(unpack(args)) -- Segunda execu√ß√£o
                end

                -- Avan√ßa para o pr√≥ximo jogador ap√≥s executar o Fling
                playerIndex = playerIndex + 1
                FlingNextPlayer()
            else
                Message("Info", "Todos os jogadores foram flingados!", 5)
            end
        end

        -- Inicia o processo de fling de todos os jogadores
        FlingNextPlayer()
    end
})

Tab2:AddButton({
    Name = "House Kill - All",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Backpack = Player.Backpack
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Houses = game.Workspace:FindFirstChild("001_Lots")
        local Vehicles = Workspace.Vehicles

        -- Lista atualizada de nomes de usu√°rios na whitelist
        local Whitelist = {
            ["kauxz016"] = true,
            ["goduser573"] = true,
            ["NOEL_A21S"] = true,
            ["Usuario_X1x1x1"] = true,
            ["Myst_gamemy34"] = true,
            ["vehshddhdhdhh"] = true,
        }

        function Check()
            return Player and Character and Humanoid and RootPart and Vehicles
        end

        local function SpawnCar()
            if Check() then
                local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                if not PCar then
                    RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                    task.wait(0.5)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                    task.wait(0.5)
                    PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                    task.wait(0.5)
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end
            end
        end

        if Check() then
            for _, Target in pairs(game.Players:GetPlayers()) do
                if Target ~= Player and Target.Character then
                    -- Verifica se o nome do jogador est√° na whitelist
                    if not Whitelist[Target.Name] then
                        local TargetC = Target.Character
                        local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
                        local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")
                        if TargetH and TargetRP then
                            SpawnCar()

                            if not TargetH.Sit then
                                local Angles = 0 -- Inicializa a rota√ß√£o
                                local startTime = os.clock() -- Marca o tempo de in√≠cio
                                local timeLimit = 5 -- Limite de tempo em segundos

                                while not TargetH.Sit do
                                    task.wait()
                                    -- Verifica se o tempo limite foi excedido
                                    if os.clock() - startTime > timeLimit then
                                        break -- Sair do loop e ir para o pr√≥ximo alvo
                                    end

                                    local Fling = function(alvo, pos, angulo)
                                        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                                        if PCar then
                                            PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)
                                        end
                                    end

                                    -- Aumentando a rota√ß√£o progressivamente
                                    Angles = Angles + 100
                                    local Rotation = CFrame.Angles(0, math.rad(Angles), 0) -- Mant√©m a rota√ß√£o apenas no eixo Y

                                    Fling(TargetRP, CFrame.new(0, 1, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                                    Fling(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                                    Fling(TargetRP, CFrame.new(2.25, 1.5, -2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                                    Fling(TargetRP, CFrame.new(-2.25, -1.5, 2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, Rotation)
                                end

                                task.wait(0.2)
                                local House = Houses:FindFirstChild(Player.Name.."House")
                                local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                                if PCar then
                                    PCar:SetPrimaryPartCFrame(CFrame.new(House.HouseSpawnPosition.Position))
                                end
                                task.wait(0.2)
                                local pedro = Region3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(30, 30, 30), game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(30, 30, 30))

                                local a = workspace:FindPartsInRegion3(pedro, game.Players.LocalPlayer.Character.HumanoidRootPart, math.huge)

                                for i, v in pairs(a) do
                                    if v.Name == "HumanoidRootPart" then
                                        local b = game:GetService("Players"):FindFirstChild(v.Parent.Name)
                                        local args = {
                                            [1] = "BanPlayerFromHouse",
                                            [2] = b,
                                            [3] = v.Parent
                                        }

                                        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))

                                        local args = {
                                            [1] = "DeleteAllVehicles"
                                        }
                                        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer(unpack(args))
                                    end
                                end
                            end
                        end
                    end
                end
                task.wait(0.2)
            end
        end
    end
})

Tab2:AddButton({
    Name = "Car Bring - All",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart.CFrame  -- Armazenar a posi√ß√£o original do jogador

        if not Humanoid or not RootPart then return end

        -- Lista de prote√ß√£o atualizada com os nomes de usu√°rio
        local ProtectedList = {
            ["kauxz016"] = true,
            ["goduser573"] = true,
            ["NOEL_A21S"] = true,
            ["Usuario_X1x1x1"] = true,
            ["Myst_gamemy34"] = true,
            ["vehshddhdhdhh"] = true,
        }

        local PlayersList = {} -- Lista de jogadores a serem processados
        for _, p in pairs(game.Players:GetPlayers()) do
            if p ~= Player and not ProtectedList[p.Name] then
                table.insert(PlayersList, p)
            end
        end

        local function ProcessPlayer(TargetPlayer)
            local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
            if not PCar then
                -- Teletransporta o jogador para uma posi√ß√£o inicial antes de pegar o carro
                RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                task.wait(0.5)
                PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
                local Seat = PCar and PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat
                        task.wait()
                        RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                    until Humanoid.Sit
                end
            end

            local TargetC = TargetPlayer.Character
            if TargetC then
                local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
                local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")
                if TargetH and TargetRP then
                    local startTime = os.clock() -- Marca o tempo de in√≠cio
                    local timeLimit = 3 -- Limite de tempo de 3 segundos

                    while not TargetH.Sit do
                        task.wait()

                        -- Verifica se o tempo limite foi excedido
                        if os.clock() - startTime > timeLimit then
                            break -- Sair do loop e ir para o pr√≥ximo alvo
                        end

                        -- Rota√ß√£o aleat√≥ria ao redor do jogador
                        local randomX = math.random(-360, 360)
                        local randomY = math.random(-360, 360)
                        local randomZ = math.random(-360, 360)

                        -- Fun√ß√£o para movimentar o carro
                        local moveCar = function(alvo, offset, rotation)
                            local newPosition = alvo.Position + offset
                            local newCFrame = CFrame.new(newPosition) * rotation
                            PCar:SetPrimaryPartCFrame(newCFrame)
                        end

                        -- Movimentos do carro ao redor do jogador alvo
                        moveCar(TargetRP, Vector3.new(0, 1, 0), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        moveCar(TargetRP, Vector3.new(0, -2.25, 5), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        moveCar(TargetRP, Vector3.new(0, 2.25, 0.25), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                    end

                    -- Teleporte para a posi√ß√£o original
                    task.wait(0.1)
                    PCar:SetPrimaryPartCFrame(OldPos)  -- Usando a posi√ß√£o original do jogador

                    -- Espera e apaga o carro
                    task.wait(0.6)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("DeleteAllVehicles")
                    task.wait(0.2)
                    Humanoid.Sit = false
                    RootPart.CFrame = OldPos  -- Retorna para a posi√ß√£o original do jogador
                end
            end
        end

        -- Processa cada jogador da lista
        for _, TargetPlayer in ipairs(PlayersList) do
            ProcessPlayer(TargetPlayer)
        end
    end
})

Tab2:AddButton({
    Name = "Car Kill - All",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart.CFrame

        if not Humanoid or not RootPart then return end

        -- Lista de prote√ß√£o atualizada com os nomes de usu√°rio
        local ProtectedList = {
            ["kauxz016"] = true,
            ["goduser573"] = true,
            ["NOEL_A21S"] = true,
            ["Usuario_X1x1x1"] = true,
            ["Myst_gamemy34"] = true,
            ["vehshddhdhdhh"] = true,
        }

        local PlayersList = {} -- Lista de jogadores a serem processados
        for _, p in pairs(game.Players:GetPlayers()) do
            if p ~= Player and not ProtectedList[p.Name] then
                table.insert(PlayersList, p)
            end
        end

        local function ProcessPlayer(TargetPlayer)
            local PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
            if not PCar then
                -- Teletransporta o jogador para uma posi√ß√£o inicial antes de pegar o carro
                RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                task.wait(0.5)
                PCar = Vehicles:FindFirstChild(Player.Name .. "Car")
                local Seat = PCar and PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat
                        task.wait()
                        RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                    until Humanoid.Sit
                end
            end

            local TargetC = TargetPlayer.Character
            if TargetC then
                local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
                local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")
                if TargetH and TargetRP then
                    local startTime = os.clock() -- Marca o tempo de in√≠cio
                    local timeLimit = 3 -- Limite de tempo de 3 segundos

                    while not TargetH.Sit do
                        task.wait()

                        -- Verifica se o tempo limite foi excedido
                        if os.clock() - startTime > timeLimit then
                            break -- Sair do loop e ir para o pr√≥ximo alvo
                        end

                        -- Rota√ß√£o aleat√≥ria ao redor do jogador
                        local randomX = math.random(-1000, 1000)
                        local randomY = math.random(-1000, 1000)
                        local randomZ = math.random(-1000, 1000)

                        -- Fun√ß√£o para movimentar o carro
                        local moveCar = function(alvo, offset, rotation)
                            local newPosition = alvo.Position + offset
                            local newCFrame = CFrame.new(newPosition) * rotation
                            PCar:SetPrimaryPartCFrame(newCFrame)
                        end

                        -- Movimentos do carro ao redor do jogador alvo
                        moveCar(TargetRP, Vector3.new(0, 1, 0), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        moveCar(TargetRP, Vector3.new(0, -2.25, 5), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        moveCar(TargetRP, Vector3.new(0, 2.25, 0.25), CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                    end

                    -- Teleporte para a coordenada final
                    task.wait(0.1)
                    PCar:SetPrimaryPartCFrame(CFrame.new(0, -600, 0))

                    -- Espera e apaga o carro
                    task.wait(0.6)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("DeleteAllVehicles")
                    task.wait(0.2)
                    Humanoid.Sit = false
                    RootPart.CFrame = OldPos
                end
            end
        end

        -- Processa cada jogador da lista
        for _, TargetPlayer in ipairs(PlayersList) do
            ProcessPlayer(TargetPlayer)
        end
    end
})

local Tab3 = Window:MakeTab({Name = "Teleports", Icon = "rbxassetid://10734886202"})

local Paragraph = Tab3:AddParagraph({"#Aqui Voc√™ Encontra..", "Teleportes Por Todo o Mapa!"})

Tab3:AddButton({
    "Ir Para os Bastidores", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(192, 4, 272) 
    end
})

Tab3:AddButton({
    "Ir ao Centro da Cidade", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(136, 4, 117) 
    end
})

Tab3:AddButton({
    "Ir √† Zona Criminal", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-119, -28, 235) 
    end
})

Tab3:AddButton({
    "Visitar a Casa Abandonada", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(986, 4, 63) 
    end
})

Tab3:AddButton({
    "Ir ao Portal da Ag√™ncia", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(672, 4, -296) 
    end
})

Tab3:AddButton({
    "Ir ao Local Secreto", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(505, -75, 143) 
    end
})

Tab3:AddButton({
    "Ir Para a Escola", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-312, 4, 211) 
    end
})

Tab3:AddButton({
    "Visitar o Brook Diner", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(161, 8, 52) 
    end
})

Tab3:AddButton({
    "Ir ao Ponto de In√≠cio", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-26, 4, -23) 
    end
})

Tab3:AddButton({
    "Ir ao Arco", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-589, 141, -59) 
    end
})

Tab3:AddButton({
    "Ir ao Hospital", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-309, 4, 71) 
    end
})

Tab3:AddButton({
    "Visitar a Ag√™ncia", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(179, 4, -464) 
    end
})

Tab3:AddButton({
    "Ir √† Sala Secreta da Oficina", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, 4, -495) 
    end
})

Tab3:AddButton({
    "Ir √† Segunda Sala Secreta", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-343, 4, -613) 
    end
})

Tab3:AddButton({
    "Ir √† Ilha Deserta", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1925, 23, 127) 
    end
})

Tab3:AddButton({
    "Ir ao Centro dos Hot√©is", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(182, 4, 150) 
    end
})

Tab3:AddButton({
    "Escalar Montanha 1", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-670, 251, 765) 
    end
})

Tab3:AddButton({
    "Ir ao Banco Central", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(2.28, 4.65, 254.58) 
    end
})

Tab3:AddButton({
    "Visitar a Loja de Roupas", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-46.15, 4.65, 253.20) 
    end
})

Tab3:AddButton({
    "Ir ao Abrigo", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-88.48, 22.05, 262.34) 
    end
})

Tab3:AddButton({
    "Ir ao Consult√≥rio Dent√°rio", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-53.58, 22.15, 265.61) 
    end
})

Tab3:AddButton({
    "Ir √† Cafeteria", 
    function() 
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-97.12, 4.65, 254.99) 
    end
})

local Tab4 = Window:MakeTab({Name = "Items", Icon = "Home"})

local Paragraph = Tab4:AddParagraph({"#Aqui Voc√™ Encontra...", "Items Do Jogo De Forma R√°pida e Eficiente!"})

Button = Tab4:AddButton({
  Name = "Obter Cart√£o de Energia",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "PowerKeyCard"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Cristal 1",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "Crystal"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Cristal 2",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "Crystals"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Obter Chave Antiga",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "OldKey"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Espada de Ouro",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "SwordGold"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Obter Cart√£o da Ag√™ncia Secreta",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "KeyCardDarkGreen"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Mangueira de Inc√™ndio",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "FireHose"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Obter Livro Secreto da Ag√™ncia",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "AgencyBook"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Obter Cart√£o Branco do Banco",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "KeyCardWhite"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Sof√° de Luxo",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "Couch"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Pegar Saco de Diamantes",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "DuffleBagDiamonds"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

Button = Tab4:AddButton({
  Name = "Obter Chave Preta do Banco",
  Callback = function()
    local args = {
      [1] = "PickingTools",
      [2] = "BankGateKey"
    }
    
    local remoteFunction = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l")
    if remoteFunction then
      remoteFunction:InvokeServer(unpack(args))
    end
  end
})

local Tab5 = Window:MakeTab({Name = "Misc", Icon = "rbxassetid://10709752906"})

local Paragraph = Tab5:AddParagraph({"#Aqui Voc√™ Encontra..", "Spams/√Åudios/Humanoid"})

local ReplicatedStorage = game:GetService("ReplicatedStorage")

if not _G.audio_all_delay then
  _G.audio_all_delay = 1
end

local function Audio_All_ClientSide(ID)

  local function CheckFolderAudioAll()
    local FolderAudio = workspace:FindFirstChild("Audio all client")
    if FolderAudio then
      return FolderAudio
    else
      local FolderAudio = Instance.new("Folder")
      FolderAudio.Name = "Audio all client"
      FolderAudio.Parent = workspace
      return FolderAudio
    end
  end

  local function CreateSound(ID)

    if type(ID) ~= "number" then
      print("Ensira o n√∫mero")
      return nil
    end

    local Folder_Audio = CheckFolderAudioAll()
    if Folder_Audio then
      local Sound = Instance.new("Sound")
      Sound.SoundId = "rbxassetid://" .. ID
      Sound.Volume = 1
      Sound.Looped = false
      Sound.Parent = Folder_Audio
      Sound:Play()
      task.wait(3)
      Sound:Destroy()
    end
  end

  CreateSound(ID)

end

local function Audio_All_ServerSide(ID)

  if type(ID) ~= "number" then
    print("Ensira um numero")
    return nil
  end

  local GunSoundEvent = ReplicatedStorage:FindFirstChild("1Gu1nSound1s", true)
  if GunSoundEvent then
    GunSoundEvent:FireServer(workspace, ID, 1)
  end
end

local audio_all_dropdown_value = nil

Tab5:AddSection({"Audio all atrav√©s de lista de IDS"})

local soundList = {
    {Name = "Grito Alto", ID = 5710016194},       -- Grito Alto
    {Name = "Jumpscare Horroroso", ID = 85435253347146}, -- Jumpscare Horroroso
    {Name = "√Åudio Alto", ID = 6855150757},        -- √Åudio Alto
    {Name = "Ru√≠do", ID = 120034877160791},        -- Ru√≠do
    {Name = "Jumpscare 2", ID = 110637995610528},  -- Jumpscare 2
    {Name = "Risada Da Bruxa Minecraft", ID = 116214940486087}, -- Risada Da Bruxa Minecraft
    {Name = "The Boiled One", ID = 137177653817621}, -- Boiola One Sanfona    
    {Name = "Deitei Um Ave Maria Doido", ID = 128669424001766},
    {Name = "Mandrake Detected", ID = 9068077052}, 
    {Name = "Aaaaaaaaa", ID = 80156405968805}, 
    {Name = "AAAHHHH", ID = 9084006093}, 
    {Name = "amongus", ID = 6651571134}, 
    {Name = "Sus", ID = 6701126635},     
    {Name = "Gritao AAAAAAAAA", ID = 5853668794},     
    {Name = "UHHHHH COFFCOFF", ID = 7056720271}, 
    {Name = "SUS", ID = 7153419575},     
}

local options = {}

for _, sound in ipairs(soundList) do
    table.insert(options, sound.Name)
end

Tab5:AddDropdown({
    Name = "Lista de Sons Irritantes",
    Options = options,
    Default = {},
    MultSelect = false,
    Callback = function(selectedName)
        for _, sound in ipairs(soundList) do
            if sound.Name == selectedName then
                audio_all_dropdown_value = sound.ID
                break
            end
        end
    end
})

Tab5:AddButton({
  Name = "Tocar audio",
  Callback = function()
    Audio_All_ServerSide(audio_all_dropdown_value)
    task.spawn(function()
      Audio_All_ClientSide(audio_all_dropdown_value)
    end)
  end
})

Tab5:AddToggle({
  Name = "Tocar loop",
  Default = false,
  Callback = function(value)

    getgenv().Audio_All_loop = value

    while getgenv().Audio_All_loop do
      Audio_All_ServerSide(audio_all_dropdown_value)
      task.spawn(function()
        Audio_All_ClientSide(audio_all_dropdown_value)
      end)
      task.wait(_G.audio_all_delay)
    end
  end
})

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local audioID = 6314880174 -- ID fixo do √°udio

local function Audio_All_ClientSide(ID)
    local function CheckFolderAudioAll()
        local FolderAudio = workspace:FindFirstChild("Audio all client")
        if not FolderAudio then
            FolderAudio = Instance.new("Folder")
            FolderAudio.Name = "Audio all client"
            FolderAudio.Parent = workspace
        end
        return FolderAudio
    end

    local function CreateSound(ID)
        if type(ID) ~= "number" then
            print("Insira um n√∫mero v√°lido!")
            return nil
        end

        local Folder_Audio = CheckFolderAudioAll()
        if Folder_Audio then
            local Sound = Instance.new("Sound")
            Sound.SoundId = "rbxassetid://" .. ID
            Sound.Volume = 1
            Sound.Looped = false
            Sound.Parent = Folder_Audio
            Sound:Play()
            task.wait(1) -- Tempo de espera antes de remover o som
            Sound:Destroy()
        end
    end

    CreateSound(ID)
end

local function Audio_All_ServerSide(ID)
    if type(ID) ~= "number" then
        print("Insira um n√∫mero v√°lido!")
        return nil
    end

    local GunSoundEvent = ReplicatedStorage:FindFirstChild("1Gu1nSound1s", true)
    if GunSoundEvent then
        GunSoundEvent:FireServer(workspace, ID, 1)
    end
end

Tab5:AddToggle({
    Name = "√Åudio Spam Fast Glitcher - ‚ö†Ô∏è",
    Default = false,
    Callback = function(value)
        getgenv().Audio_All_loop_fast = value

        while getgenv().Audio_All_loop_fast do
            Audio_All_ServerSide(audioID)
            task.spawn(function()
                Audio_All_ClientSide(audioID)
            end)
            task.wait(0.03) -- Delay extremamente r√°pido (0.1 segundos)
        end
    end
})

local audio_all_textbox_value = nil

local function CheckNumberInString(str)
  return str:match("^%d+$") ~= nil
end

Tab5:AddSection({"Audio all atrav√©s de (voc√™ que colocar seus pr√≥prios ids)"})

Tab5:AddTextBox({
  Name = "Adicionar id",
  Default = "",
  PlaceholderText = "Digite um id v√°lido",
  ClearText = true,
  Callback = function(value)
    audio_all_textbox_value = value
  end
})

Tab5:AddButton({
  Name = "Tocar audio",
  Callback = function()
    
    local string_number = audio_all_textbox_value
    if CheckNumberInString(string_number) then
      Audio_All_ServerSide(tonumber(string_number))
      task.spawn(function()
        Audio_All_ClientSide(tonumber(string_number))
      end)
    else
      print("A string n√£o s√≥ tem n√∫mero")
    end
  end
})

Tab5:AddToggle({
  Name = "Tocar loop",
  Default = false,
  Callback = function(value)

    getgenv().Audio_All_loop2 = value
    local string_number = audio_all_textbox_value
    
    while getgenv().Audio_All_loop2 do
      if CheckNumberInString(string_number) then
        Audio_All_ServerSide(tonumber(string_number))
        task.spawn(function()
          Audio_All_ClientSide(tonumber(string_number))
        end)
      else
        print("A string n√£o s√≥ tem n√∫mero")
      end
      task.wait(_G.audio_all_delay)
    end
  end
})

local soundList = {
    {Name = "Grito Alto", ID = 5710016194},       -- Grito Alto
    {Name = "Jumpscare Horroroso", ID = 85435253347146}, -- Jumpscare Horroroso
    {Name = "√Åudio Alto", ID = 6855150757},        -- √Åudio Alto
    {Name = "Ru√≠do", ID = 120034877160791},        -- Ru√≠do
    {Name = "Jumpscare 2", ID = 110637995610528},  -- Jumpscare 2
    {Name = "Risada Da Bruxa Minecraft", ID = 116214940486087}, -- Risada Da Bruxa Minecraft
    {Name = "The Boiled One", ID = 137177653817621}, -- Boiola One Sanfona    
    {Name = "Deitei Um Ave Maria Doido", ID = 128669424001766},
    {Name = "Mandrake Detected", ID = 9068077052}, 
    {Name = "Aaaaaaaaa", ID = 80156405968805}, 
    {Name = "AAAHHHH", ID = 9084006093}, 
    {Name = "amongus", ID = 6651571134}, 
    {Name = "Sus", ID = 6701126635},     
    {Name = "Gritao AAAAAAAAA", ID = 5853668794},     
    {Name = "UHHHHH COFFCOFF", ID = 7056720271}, 
    {Name = "SUS", ID = 7153419575},     
}

local options = {}

for _, sound in ipairs(soundList) do
    table.insert(options, sound.Name)
end

-- Cria√ß√£o do Dropdown de sele√ß√£o de √°udio
Tab5:AddDropdown({
    Name = "Selecione um √Åudio Para Copiar",
    Options = options,
    Default = {},
    MultSelect = false,
    Callback = function(selectedName)
        for _, sound in ipairs(soundList) do
            if sound.Name == selectedName then
                -- Quando o √°udio for selecionado, copia o ID
                local selectedID = sound.ID
                setclipboard(tostring(selectedID))  -- Copia o ID para a √°rea de transfer√™ncia
                -- Exibe uma notifica√ß√£o na tela
                game:GetService("StarterGui"):SetCore("SendNotification", {
                    Title = "ID Copiado!",
                    Text = "ID do √°udio: " .. selectedID,
                    Duration = 5
                })
                print("ID copiado: " .. selectedID)  -- Exibe o ID no console
                break
            end
        end
    end
})

Tab5:AddButton({
  Name = "Boomhox 100% All",
  Callback = function()
    loadstring(game:HttpGet('https://gist.githubusercontent.com/ReDz-Theme/7528ff7c212014aae95d737415447a74/raw/a140038ae0cac72d3aa46c354bc205765d95b6e4/Boombox'))()
  end
})

Tab5:AddButton({
  Name = "Dark Blade",
  Callback = function()
    loadstring(game:HttpGet('https://pastebin.com/raw/6ctYevGX'))()
  end
})

-- Se√ß√£o: Modifica√ß√µes de Jogador
local Section = Tab5:AddSection({"<Modifica√ß√µes de Jogador>"})

Tab5:AddSlider({
   Name = "Velocidade do Jogador",
   Increase = 1,
   MinValue = 16,
   MaxValue = 888,
   Default = 16,
   Callback = function(Value)
       local player = game.Players.LocalPlayer
       local character = player.Character or player.CharacterAdded:Wait()
       local humanoid = character:FindFirstChildOfClass("Humanoid")
       
       if humanoid then
           humanoid.WalkSpeed = Value
       end
   end
})

Tab5:AddSlider({
   Name = "Altura do Salto",
   Increase = 1,
   MinValue = 50,
   MaxValue = 500,
   Default = 50,
   Callback = function(Value)
       local player = game.Players.LocalPlayer
       local character = player.Character or player.CharacterAdded:Wait()
       local humanoid = character:FindFirstChildOfClass("Humanoid")
       
       if humanoid then
           humanoid.JumpPower = Value
       end
   end
})

-- Se√ß√£o: Configura√ß√µes de Ambiente
local Section = Tab5:AddSection({"<Configura√ß√µes de Ambiente>"})

Tab5:AddSlider({
   Name = "Gravidade",
   Increase = 1,
   MinValue = 0,
   MaxValue = 10000,
   Default = 196.2,
   Callback = function(Value)
       game.Workspace.Gravity = Value
   end
})

-- Se√ß√£o: Funcionalidades de Movimenta√ß√£o
local Section = Tab5:AddSection({"<Funcionalidades de Movimenta√ß√£o>"})

local InfiniteJumpEnabled = false

game:GetService("UserInputService").JumpRequest:Connect(function()
   if InfiniteJumpEnabled then
      local character = game.Players.LocalPlayer.Character
      if character and character:FindFirstChild("Humanoid") then
         character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
      end
   end
end)

Tab5:AddToggle({
   Name = "Infinite Jump",
   Default = false,
   Callback = function(Value)
      InfiniteJumpEnabled = Value
   end
})

local Clipon = false

Tab5:AddToggle({
    Name = "Noclip",
    Default = false,
    Callback = function(Value)
        if Value then
            Clipon = true

            local Stepped
            Stepped = game:GetService("RunService").Stepped:Connect(function()
                if Clipon then
                    for a, b in pairs(workspace:GetChildren()) do
                        if b.Name == game.Players.LocalPlayer.Name then
                            for i, v in pairs(workspace[game.Players.LocalPlayer.Name]:GetChildren()) do
                                if v:IsA("BasePart") then
                                    v.CanCollide = false
                                end
                            end
                        end
                    end
                else
                    Stepped:Disconnect()
                end
            end)
        else
            Clipon = false
        end
    end
})

-- Se√ß√£o: A√ß√µes e Intera√ß√µes
local Section = Tab5:AddSection({"<A√ß√µes e Intera√ß√µes>"})

Tab5:AddButton({
  Name = "FE DOORS",
  Callback = function()
    loadstring(game:HttpGet('https://pastebin.com/raw/W1hjUfhx'))()
  end
})

local isActive = false

Tab5:AddToggle({
    Name = "Loop Smoke Avatar",
    Default = false,
    Callback = function(Value)
        isActive = Value

        while isActive do
            local mall = workspace:WaitForChild("WorkspaceCom"):WaitForChild("001_Mall"):WaitForChild("001_Pizza"):FindFirstChild("CatchFire")
            
            if mall then
                local touchInterest = mall:FindFirstChild("TouchInterest")
                if touchInterest then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 0)
                    wait()
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 1)
                end
            end
            wait(1)
        end
    end
})

Tab5:AddToggle({
    Name = "Loop Fire Avatar",
    Default = false,
    Callback = function(Value)
        isActive = Value

        while isActive do
            local playerName = game.Players.LocalPlayer.Name
            local lotFolder = game:GetService("Workspace"):WaitForChild("001_Lots")
            local house = lotFolder:FindFirstChild(playerName .. "House")

            if house then
                local mall = house:WaitForChild("HousePickedByPlayer"):WaitForChild("HouseModel"):WaitForChild("001_BBQ"):FindFirstChild("CatchFire")
                if mall then
                    local touchInterest = mall:FindFirstChild("TouchInterest")
                    if touchInterest then
                        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 0)
                        wait()
                        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, mall, 1)
                    end
                end
            else
                warn("House not found for player: " .. playerName)
            end
            wait(1)
        end
    end
})

Tab5:AddButton({
    Name = "Get Trail",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local OldPos = RootPart.CFrame
        
        local function freezeHumanoid(humanoid)
            humanoid.WalkSpeed = 0
            humanoid.JumpPower = 0
        end
        
        local function restoreHumanoid(humanoid)
            humanoid.WalkSpeed = 16
            humanoid.JumpPower = 50
        end
        
        local firstPosition = CFrame.new(-349, 5, 98)
        
        local PoolClick = workspace.WorkspaceCom["001_Hospital"]:FindFirstChild("PoolClick")
        
        if PoolClick and PoolClick:FindFirstChild("ClickDetector") then
            freezeHumanoid(Humanoid)
            RootPart.CFrame = firstPosition
            task.wait(1)
            RootPart.CFrame = PoolClick.CFrame
            fireclickdetector(PoolClick.ClickDetector)
            task.wait(2)
            RootPart.CFrame = OldPos
            restoreHumanoid(Humanoid)
        else
            warn("PoolClick ou ClickDetector n√£o encontrado!")
        end
    end
})

-- Se√ß√£o: Funcionalidades de Jogo
local Section = Tab5:AddSection({"<Funcionalidades de Jogo>"})

local BNumber = 1000

Tab5:AddToggle({
    Name = "Spam Basketball",
    Default = false,
    Callback = function(Value)
        local BasketToggleH = Value
        if BasketToggleH then
            local Player = game.Players.LocalPlayer
            local Backpack = Player.Backpack
            local Mouse = Player:GetMouse()
            local Character = Player.Character
            local Humanoid = Character:FindFirstChildOfClass("Humanoid")
            local RootPart = Character:FindFirstChild("HumanoidRootPart")
            local OldPos = RootPart.CFrame
            local Clone = workspace.WorkspaceCom["001_GiveTools"].Basketball

            for i = 1, BNumber do
                task.wait()
                RootPart.CFrame = Clone.CFrame
                fireclickdetector(Clone.ClickDetector)
            end
            task.wait()
            RootPart.CFrame = OldPos

            while BasketToggleH do
                task.wait()
                for i, v in ipairs(Character:GetChildren()) do
                    if v.Name == "Basketball" then
                        task.wait()
                        local args = {
                            [1] = Mouse.Hit.p
                        }
                        v.ClickEvent:FireServer(unpack(args))
                    end
                end
            end
        end
    end
})

Tab5:AddSlider({
    Name = "Quantidade De Basketball",
    MinValue = 1,
    MaxValue = 1000,
    Default = BNumber,
    Increase = 1,
    Callback = function(Value)
        BNumber = Value
    end
})

local Tab6 = Window:MakeTab({Name = "House", Icon = "rbxassetid://10723407389"})

local Paragraph = Tab6:AddParagraph({"#Aqui Voc√™ Encontra..", "Personaliza√ß√µes RGB/Fun√ß√µes de Casa!"})

local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Se√ß√£o: Funcionalidades de Casa
local Section = Tab6:AddSection({"<Funcionalidades de Casa>"})

-- Fun√ß√£o para executar o PickingCustomHouse com o n√∫mero da Dropdown
local function executePickingCustomHouse(customNumber)
    local formattedHouseNumber = string.format("%03d_House", customNumber) -- Formata para "001", "002", etc.
    local args = {
        [1] = "PickingCustomHouse",
        [2] = formattedHouseNumber,
        [3] = customNumber -- Valor baseado na Dropdown
    }

    local event = ReplicatedStorage.RE:FindFirstChild("1Gettin1gHous1e")
    if event then
        event:FireServer(unpack(args))
    else
        warn("Evento '1Gettin1gHous1e' n√£o encontrado!")
    end
end

-- Fun√ß√£o para executar PlayerSellHouse
local function executePlayerSellHouse()
    local args = {
        [1] = "PlayerSellHouse"
    }

    local event = ReplicatedStorage.RE:FindFirstChild("1Player1sHous1eChoic1e")
    if event then
        event:FireServer(unpack(args))
    else
        warn("Evento '1Player1sHous1eChoic1e' n√£o encontrado!")
    end
end

-- Dropdown de sele√ß√£o de casa
local selectedValue = 2 -- Valor padr√£o
local Dropdown = Tab6:AddDropdown({
    Name = "Selecione um N√∫mero De Casa",
    Options = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", 
               "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37"},
    Default = {"2"},
    MultSelect = false,
    Callback = function(Value)
        selectedValue = tonumber(Value) -- Atualiza o valor selecionado
    end
})

-- Bot√£o para bloquear a casa
local Button = Tab6:AddButton({
    Name = "Lock House",
    Callback = function()
        -- Executa as duas fun√ß√µes simultaneamente sem tempos de espera
        task.spawn(function()
            executePickingCustomHouse(selectedValue)
        end)
        task.spawn(function()
            executePlayerSellHouse()
        end)
    end
})

local Paragraph = Tab6:AddParagraph({"Permiss√£o De Casa", "House Perm"})

-- Se√ß√£o: Permiss√µes e Teleporte
local Section = Tab6:AddSection({"<Permiss√µes e Teleporte>"})

local Players = game:GetService("Players")  
local LocalPlayer = Players.LocalPlayer  
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Houses = workspace["001_Lots"]

if not _G.ShnmaxCharacter then
  _G.ShnmaxCharacter = LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
  end)
end

local List_House_value = nil

-- Dropdown para listar casas
local List_House = Tab6:AddDropdown({
  Name = "Lista de casas",
  Options = {},
  Default = {"..."},
  MultSelect = false,
  Callback = function(value)
    List_House_value = value
  end
})

-- Fun√ß√£o para atualizar a lista de casas
local function UptadeHouse()
  local Tab_Houses = {}

  for _, House in ipairs(Houses:GetChildren()) do
    if House.Name ~= "For Sale" and House:IsA("Model") then
      table.insert(Tab_Houses, House.Name)
    end
  end
  
  if List_House then
    List_House:Set(Tab_Houses, true)
  end
end

UptadeHouse()

-- Bot√£o para atualizar as casas
Tab6:AddButton({
  Name = "Atualizar casa",
  Callback = function()
    UptadeHouse()
  end
})

-- Bot√£o para pegar permiss√£o da casa
Tab6:AddButton({
  Name = "Pegar permiss√£o da casa",
  Callback = function()
    local function ExtractNumberFromHouse(HouseName)
      local House_Target = Houses:FindFirstChild(HouseName)
      if House_Target and House_Target:IsA("Model") then
        local Number_Part = House_Target:FindFirstChild("Number")
        if Number_Part then
          local Number_Value = Number_Part:FindFirstChild("Number")
          if Number_Value then
            return Number_Value.Value
          end
        end
      end
    end

    local args = {
      [1] = "GivePermissionLoopToServer",
      [2] = game:GetService("Players").LocalPlayer,
      [3] = ExtractNumberFromHouse(List_House_value)
    }

    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
  end
})

-- Bot√£o para teleportar para a casa
Tab6:AddButton({
  Name = "Teleportar para casa",
  Callback = function()
    local function TeleportToHouse(HouseName)
      local House_Target = Houses:FindFirstChild(HouseName)
      if House_Target and House_Target:IsA("Model") then
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        if RootPart then
          RootPart.CFrame = CFrame.new(House_Target.WorldPivot.Position)
        end
      end
    end

    TeleportToHouse(List_House_value)
  end
})

-- Se√ß√£o: Remo√ß√£o de Banimento
local Section = Tab6:AddSection({"<Remo√ß√£o de Banimento>"})

local function removerBannedLots()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local bannedLots = ReplicatedStorage:FindFirstChild("BannedLots")

    if bannedLots and bannedLots:IsA("Folder") then
        bannedLots:ClearAllChildren()
        bannedLots:Destroy()
    end
end

Tab6:AddButton({
    Name = "Remover Banimento Da Casa",
    Callback = removerBannedLots
})

-- Se√ß√£o: Personaliza√ß√£o de Casa
local Section = Tab6:AddSection({"<Personaliza√ß√£o de Casa>"})

-- Fun√ß√£o para gerar cores aleat√≥rias
local function getRandomColor()
    return Color3.new(math.random(), math.random(), math.random())
end

local runningRainbow = false

local function changeColor()
    while runningRainbow do
        local args = {
            [1] = "ColorPickHouse",
            [2] = getRandomColor()
        }
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e"):FireServer(unpack(args))
        wait(1) -- intervalo de mudan√ßa de cor
    end
end

-- Cria√ß√£o do Toggle para Rainbow House
ToggleRainbow = Tab6:AddToggle({
    Name = "Casa Colorida",
    Default = false,
    Callback = function(Value)
        runningRainbow = Value
        if runningRainbow then
            spawn(changeColor)
        end
    end
})

-- Se√ß√£o: A√ß√µes Diversas
local Section = Tab6:AddSection({"<A√ß√µes Diversas>"})

local runningBaby = false
ToggleBaby = Tab6:AddToggle({
    Name = "Tirar E Colocar Beb√™s",
    Default = false,
    Callback = function(Value)
        runningBaby = Value
        print("Toggle changed:", runningBaby)

        if runningBaby then
            spawn(function()
                while runningBaby do
                    local argsYes = { [1] = "BabyOptionYes" }
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e"):FireServer(unpack(argsYes))

                    wait(1)  -- Aumento do atraso para evitar sobrecarga do servidor

                    local argsNo = { [1] = "BabyOptionNo" }
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e"):FireServer(unpack(argsNo))

                    wait(1)  -- Aumento do atraso para evitar sobrecarga do servidor
                end
            end)
        end
    end
})

local runningGarage = false
ToggleGarage = Tab6:AddToggle({
    Name = "Abrir e Fechar Garagem",
    Default = false,
    Callback = function(Value)
        runningGarage = Value
        print("Toggle changed:", runningGarage)

        if runningGarage then
            spawn(function()
                while runningGarage do
                    local args = { [1] = "GarageDoor" }
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e"):FireServer(unpack(args))
                    wait(1)  -- Intervalo para evitar sobrecarga
                end
            end)
        end
    end
})

local runningCurtains = false
ToggleCurtains = Tab6:AddToggle({
    Name = "Abrir e Fechar Cortinas",
    Default = false,
    Callback = function(Value)
        runningCurtains = Value
        print("Toggle changed:", runningCurtains)

        if runningCurtains then
            spawn(function()
                while runningCurtains do
                    local args = { [1] = "Curtains" }
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e"):FireServer(unpack(args))
                    wait(1)  -- Intervalo para evitar sobrecarga
                end
            end)
        end
    end
})

local runningLockDoors = false
local ToggleLockDoors = Tab6:AddToggle({
    Name = "Abrir E Fechar Portas",
    Default = false,
    Callback = function(Value)
        runningLockDoors = Value
        print("Toggle changed:", runningLockDoors)

        if runningLockDoors then
            spawn(function()
                while runningLockDoors do
                    local args = { [1] = "LockDoors" }
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sHous1e"):FireServer(unpack(args))
                    wait(1)  -- Intervalo para evitar sobrecarga
                end
            end)
        end
    end
})

local Tab7 = Window:MakeTab({Name = "Car", Icon = "rbxassetid://10734886202"})

local Paragraph = Tab7:AddParagraph({"#Aqui Voc√™ Encontra..", "Modifica√ß√µes De Ve√≠culo/Liberar Carros De Eventos!"})

-- Bot√£o para Desbloquear Carros dos Eventos
Button = Tab7:AddButton({
    Name = "Desbloquear Carros dos Eventos", -- Corrigido para "Name"
    Callback = function()
        -- Desbloqueia cada carro do evento
        local eventos = {"UnlockInfoA", "UnlockInfoB", "UnlockInfoC", "UnlockInfoD", "UnlockInfoE"}

        for _, evento in ipairs(eventos) do
            local args = {
                [1] = evento
            }
            game:GetService("ReplicatedStorage").RE.Holiday:FireServer(unpack(args))
        end
        
        print("Todos os Carros do Evento Desbloqueado.")
    end
})

local Section = Tab7:AddSection({"Velocidade"})

-- Vari√°vel global para armazenar a velocidade do carro
local carSpeed = 0

-- TextBox para escolher a velocidade do carro
Tab7:AddTextBox({
    Name = "Escolher Velocidade",
    Default = "Requer Premium",
    PlaceholderText = "Insira a velocidade do carro",
    ClearTextOnFocus = true,
    Callback = function(value)
        carSpeed = tonumber(value)  -- Converte o valor para n√∫mero
        if carSpeed then
            print("Velocidade configurada para:", carSpeed)  -- Mensagem de depura√ß√£o
        else
            print("Por favor, insira um valor num√©rico v√°lido.")
        end
    end
})

-- Bot√£o para aplicar a velocidade ao carro
Tab7:AddButton({
    Name = "Aplicar Velocidade",
    Callback = function()
        if carSpeed and carSpeed > 0 then
            -- Converte `carSpeed` para string conforme o novo padr√£o
            local args = {
                [1] = "PlayerGiveSpeedLower",
                [2] = carSpeed  -- Converte para string para enviar ao servidor
            }

            -- Verifica se o evento realmente existe
            local event = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sCa1r")
            if event then
                event:FireServer(unpack(args))
                print("Velocidade aplicada com sucesso:", carSpeed)
            else
                print("Erro: Evento '1Player1sCa1r' n√£o encontrado.")
            end
        else
            print("Por favor, insira uma velocidade v√°lida na TextBox antes de aplicar.")
        end
    end
})

local Section = Tab7:AddSection({"Music Box"})

-- TextBox para inserir o ID da m√∫sica
Tab7:AddTextBox({
    Name = "M√∫sica Box",
    Default = "Requer Premium",
    PlaceholderText = "Id Music", -- Alterado para PlaceholderText
    ClearTextOnFocus = true,
    Callback = function(value)
        musicId = value
        if musicId and musicId ~= "" then
            print("ID da m√∫sica configurado para:", musicId)  -- Mensagem de depura√ß√£o
        else
            print("Por favor, insira um ID de m√∫sica v√°lido.")
        end
    end
})

-- Bot√£o para ativar a m√∫sica
Tab7:AddButton({
    Name = "Ativar M√∫sica", -- Alterado para Name
    Callback = function()
        if musicId and musicId ~= "" then
            local args = {
                [1] = "PickingCarMusicText",
                [2] = musicId  -- Usar o ID de m√∫sica inserido na TextBox
            }

            -- Verifica se o evento existe e dispara o evento com o ID da m√∫sica
            local event = game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sCa1r")
            if event then
                event:FireServer(unpack(args))
                print("M√∫sica ativada com ID:", musicId)
            else
                print("Erro: Evento '1Player1sCa1r' n√£o encontrado.")
            end
        else
            print("Por favor, insira um ID de m√∫sica v√°lido na TextBox.")
        end
    end
})

local Section = Tab7:AddSection({"Outros"})

local Toggle
local isActive = false -- Vari√°vel de controle do loop

Tab7:AddToggle({
    Name = "Texto Invas√£o!",
    Default = false,
    Callback = function(Value)
        isActive = Value -- Atualiza o estado do loop

        if isActive then
            -- Inicia o loop em uma corrotina
            coroutine.wrap(function()
                while isActive do
                    -- Tabela de comandos a serem executados
                    local commands = {
                        { [1] = "ReturningSemiName", [2] = "INVAS√ÉO" },
                        { [1] = "ReturningSemiName", [2] = "SOFRAM" },
                        { [1] = "ReturningSemiName", [2] = "ESCURID√ÉO" },
                        { [1] = "ReturningSemiName", [2] = "RAIVA" },
                        { [1] = "ReturningSemiName", [2] = "FRACOS" }
                    }

                    -- Executa cada comando sequencialmente
                    for _, args in ipairs(commands) do
                        if not isActive then break end -- Interrompe se o Toggle for desativado
                        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Cemeter1y"):FireServer(unpack(args))
                        wait(1) -- Aguarda 1 segundo entre os comandos (ajuste conforme necess√°rio)
                    end
                end
            end)()
        end
    end
})

-- Servi√ßos para Rainbow Car
local args = {
    [1] = "PickingCarColor",
    [2] = nil --[[Color3]]
}

-- Fun√ß√£o para mudar a cor aleatoriamente
local function getRandomColor()
    return Color3.new(math.random(), math.random(), math.random())
end

local running = false
local changingColor = false -- Nova vari√°vel para controlar a execu√ß√£o da fun√ß√£o

-- Fun√ß√£o para iniciar/parar a mudan√ßa de cor
local function changeColor()
    changingColor = true -- Define que a mudan√ßa de cor est√° em andamento
    while running do
        args[2] = getRandomColor()
        game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sCa1r"):FireServer(unpack(args))
        
        wait(1) -- intervalo de mudan√ßa de cor, ajustado para prevenir kick
    end
    changingColor = false -- Redefine quando a execu√ß√£o √© conclu√≠da
end

-- Cria√ß√£o do Toggle para Rainbow Car com a nova estrutura
local RainbowCarToggle = Tab7:AddToggle({
    Name = "Rainbow Car", -- Alterado para Name
    Default = false,
    Callback = function(Value)
        running = Value
        if running and not changingColor then
            spawn(changeColor)  -- Inicia a mudan√ßa de cor se o Toggle estiver ativo e n√£o estiver mudando
        elseif not running then
            print("Rainbow Car desativado.")
        end
    end
})

-- Fun√ß√µes auxiliares para controle do Toggle
RainbowCarToggle:Set(false) -- Define o estado inicial como "desligado"

local isRunning = false -- Vari√°vel para controlar o estado do loop

Toggle = Tab7:AddToggle({
    Name = "Loop Duke 1",
    Default = false,
    Callback = function(Value)
        if Value then
            isRunning = true -- Define como verdadeiro quando o toggle √© ativado
            while isRunning do
                local args = {
                    [1] = "Duke1"
                }
                
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sCa1r"):FireServer(unpack(args))
                
                wait(1) -- Espera 3 segundos antes de executar novamente
            end
        else
            isRunning = false -- Define como falso quando o toggle √© desativado
        end
    end
})

local isRunning = false -- Vari√°vel para controlar o estado do loop

Toggle = Tab7:AddToggle({
    Name = "Loop Duke 2",
    Default = false,
    Callback = function(Value)
        if Value then
            isRunning = true -- Define como verdadeiro quando o toggle √© ativado
            while isRunning do
                local args = {
                    [1] = "Duke"
                }
                
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sCa1r"):FireServer(unpack(args))
                
                wait(1) -- Espera 3 segundos antes de executar novamente
            end
        else
            isRunning = false -- Define como falso quando o toggle √© desativado
        end
    end
})

local isRunning = false -- Vari√°vel para controlar o estado do loop

Toggle = Tab7:AddToggle({
    Name = "Loop Fire",
    Default = false,
    Callback = function(Value)
        if Value then
            isRunning = true -- Define como verdadeiro quando o toggle √© ativado
            while isRunning do
                local args = {
                    [1] = "Fire"
                }
                
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Player1sCa1r"):FireServer(unpack(args))
                
                wait(1) -- Espera 3 segundos antes de executar novamente
            end
        else
            isRunning = false -- Define como falso quando o toggle √© desativado
        end
    end
})

local Tab8 = Window:MakeTab({Name = "Avatar", Icon = "rbxassetid://10734952036"})

local Paragraph = Tab8:AddParagraph({"#Aqui Voc√™ Encontra..", "Copie Avatares De Jogadores!"})

local Players = game:GetService("Players")
local Target = nil

-- Fun√ß√£o para obter os nomes dos jogadores
local function GetPlayerNames()
    local PlayerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(PlayerNames, player.Name)
    end
    return PlayerNames
end

-- Atualizando o Dropdown quando um jogador entra ou sai
local function UpdateDropdown()
    Dropdown:Refresh(GetPlayerNames(), true)
end

-- Conectando os eventos de jogador entrar e sair
Players.PlayerAdded:Connect(UpdateDropdown)
Players.PlayerRemoving:Connect(UpdateDropdown)

-- Adicionando o Dropdown com os nomes dos jogadores
local Dropdown = Tab8:AddDropdown({
    Name = "Selecionar Jogador Para a C√≥pia",
    Options = GetPlayerNames(),
    Default = Target,
    Callback = function(Value)
        Target = Value
    end
})

-- Adicionando o bot√£o para copiar o avatar e anima√ß√µes
Tab8:AddButton({
    Name = "Copy Avatar",
    Callback = function()
        if not Target then return end

        local Player = Players:FindFirstChild(Target)
        if Player and Player.Character then
            local Character = Player.Character
            local Humanoid = Character:FindFirstChildOfClass("Humanoid")

            if Humanoid then
                local PDesc = Humanoid:GetAppliedDescription()
                local LPDesc = game.Players.LocalPlayer.Character.Humanoid:GetAppliedDescription()
                local RE = game:GetService("ReplicatedStorage").RE

                -- Copiando acess√≥rios
                for _, v in ipairs(LPDesc:GetAccessories(true)) do
                    if v.AssetId then
                        task.wait(0.3)
                        RE:FindFirstChild("1Updat1eAvata1r"):FireServer("wear", tonumber(v.AssetId))
                    end
                end

                task.wait(0.1)
                RE:FindFirstChild("1Updat1eAvata1r"):FireServer("wear", tonumber(PDesc.Shirt))
                task.wait(0.5)
                RE:FindFirstChild("1Updat1eAvata1r"):FireServer("wear", tonumber(PDesc.Pants))

                task.wait(0.5)
                RE:FindFirstChild("1Avata1rOrigina1l"):FireServer("CharacterChange", {
                    PDesc.Torso, PDesc.RightArm, PDesc.LeftArm,
                    PDesc.RightLeg, PDesc.LeftLeg, PDesc.Head
                }, "By Davi999(Melhor Sub Dono)")

                task.wait(0.5)
                RE:FindFirstChild("1Updat1eAvata1r"):FireServer("wear", tonumber(PDesc.Face))

                -- Copiando acess√≥rios do personagem
                for _, v in ipairs(PDesc:GetAccessories(true)) do
                    if v.AssetId then
                        task.wait(0.3)
                        RE:FindFirstChild("1Updat1eAvata1r"):FireServer("wear", tonumber(v.AssetId))
                    end
                end

                -- Copiando cor da pele
                local SkinColor = Character:FindFirstChild("Body Colors")
                if SkinColor then
                    task.wait(0.5)
                    RE:FindFirstChild("1Updat1eAvata1r"):FireServer("skintone", tostring(SkinColor.HeadColor))
                end

                task.wait(0.5)
                RE:FindFirstChild("1Updat1eAvata1r"):FireServer("wearWalkStyle", tonumber(PDesc.IdleAnimation))

                -- Copiando anima√ß√µes de movimento
                if Humanoid:FindFirstChild("Running") then
                    task.wait(0.5)
                    RE:FindFirstChild("1Updat1eAvata1r"):FireServer("wearWalkStyle", tonumber(Humanoid.Running))
                end

                if Humanoid:FindFirstChild("Jumping") then
                    task.wait(0.5)
                    RE:FindFirstChild("1Updat1eAvata1r"):FireServer("wearJumpStyle", tonumber(Humanoid.Jumping))
                end

                if Humanoid:FindFirstChild("Falling") then
                    task.wait(0.5)
                    RE:FindFirstChild("1Updat1eAvata1r"):FireServer("wearFallStyle", tonumber(Humanoid.Falling))
                end

                -- Copiando RPName e RPBio do jogador, se existirem
                local Bag = Player:FindFirstChild("PlayersBag")
                if Bag then
                    if Bag:FindFirstChild("RPName") and Bag.RPName.Value ~= "" then
                        task.wait(0.5)
                        RE:FindFirstChild("1RPNam1eTex1t"):FireServer("RolePlayName", Bag.RPName.Value)
                    end
                    if Bag:FindFirstChild("RPBio") and Bag.RPBio.Value ~= "" then
                        task.wait(0.5)
                        RE:FindFirstChild("1RPNam1eTex1t"):FireServer("RolePlayBio", Bag.RPBio.Value)
                    end
                    if Bag:FindFirstChild("RPNameColor") and Bag.RPNameColor.Value ~= Color3.fromRGB(255, 255, 255) then
                        task.wait(0.5)
                        RE:FindFirstChild("1RPNam1eColo1r"):FireServer("PickingRPNameColor", Bag.RPNameColor.Value)
                    end
                    if Bag:FindFirstChild("RPBioColor") and Bag.RPBioColor.Value ~= Color3.fromRGB(255, 255, 255) then
                        task.wait(0.5)
                        RE:FindFirstChild("1RPNam1eColo1r"):FireServer("PickingRPBioColor", Bag.RPBioColor.Value)
                    end
                end
            end
        end
    end
})

local Tab9 = Window:MakeTab({Name = "Esp", Icon = "rbxassetid://10747366606"})

local Paragraph = Tab9:AddParagraph({"#Aqui Voc√™ Encontra", "Encontre Os Jogadores De Forma R√°pida!"})

-- Vari√°veis principais
local ESPEnabled = false
local CurrentColor = Color3.fromRGB(255, 255, 255) -- Cor inicial branca
local RainbowEnabled = false

local function createESP(player)
    if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    -- Adicionar Highlight para destacar o jogador
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESP_Highlight"
    highlight.Adornee = player.Character
    highlight.FillColor = CurrentColor
    highlight.FillTransparency = 0.5
    highlight.OutlineColor = Color3.fromRGB(0, 0, 0)
    highlight.OutlineTransparency = 0
    highlight.Parent = player.Character

    -- Criar BillboardGui para exibir as informa√ß√µes
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_Info"
    billboard.Adornee = player.Character:FindFirstChild("HumanoidRootPart")
    billboard.Size = UDim2.new(0, 150, 0, 50)  -- Diminuindo o tamanho da GUI
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = player.Character

    -- Nome do jogador
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, 0, 0.2, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = player.Name
    nameLabel.TextColor3 = CurrentColor
    nameLabel.TextStrokeTransparency = 0
    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.Code -- Fonte digital
    nameLabel.Parent = billboard

    -- Dist√¢ncia
    local distanceLabel = Instance.new("TextLabel")
    distanceLabel.Size = UDim2.new(1, 0, 0.2, 0)
    distanceLabel.Position = UDim2.new(0, 0, 0.2, 0)
    distanceLabel.BackgroundTransparency = 1
    distanceLabel.Text = "Dist√¢ncia: Calculando..."
    distanceLabel.TextColor3 = CurrentColor
    distanceLabel.TextStrokeTransparency = 0
    distanceLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    distanceLabel.TextScaled = true
    distanceLabel.Font = Enum.Font.Code -- Fonte digital
    distanceLabel.Parent = billboard

    -- Idade da conta
    local ageLabel = Instance.new("TextLabel")
    ageLabel.Size = UDim2.new(1, 0, 0.2, 0)
    ageLabel.Position = UDim2.new(0, 0, 0.4, 0)
    ageLabel.BackgroundTransparency = 1
    ageLabel.Text = "Idade da conta: " .. player.AccountAge .. " dias"
    ageLabel.TextColor3 = CurrentColor
    ageLabel.TextStrokeTransparency = 0
    ageLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    ageLabel.TextScaled = true
    ageLabel.Font = Enum.Font.Code -- Fonte digital
    ageLabel.Parent = billboard

    -- Status de vida
    local healthLabel = Instance.new("TextLabel")
    healthLabel.Size = UDim2.new(1, 0, 0.2, 0)
    healthLabel.Position = UDim2.new(0, 0, 0.6, 0)
    healthLabel.BackgroundTransparency = 1
    healthLabel.Text = "Vida: " .. math.floor(player.Character.Humanoid.Health)
    healthLabel.TextColor3 = CurrentColor
    healthLabel.TextStrokeTransparency = 0
    healthLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    healthLabel.TextScaled = true
    healthLabel.Font = Enum.Font.Code -- Fonte digital
    healthLabel.Parent = billboard

    -- Status de sentado
    local sittingLabel = Instance.new("TextLabel")
    sittingLabel.Size = UDim2.new(1, 0, 0.2, 0)
    sittingLabel.Position = UDim2.new(0, 0, 0.8, 0)
    sittingLabel.BackgroundTransparency = 1
    sittingLabel.Text = "Sentado: N√£o"
    sittingLabel.TextColor3 = CurrentColor
    sittingLabel.TextStrokeTransparency = 0
    sittingLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    sittingLabel.TextScaled = true
    sittingLabel.Font = Enum.Font.Code -- Fonte digital
    sittingLabel.Parent = billboard

    -- Atualizar dist√¢ncia, sa√∫de e status de sentado continuamente
    task.spawn(function()
        while ESPEnabled and player.Character and player.Character:FindFirstChild("HumanoidRootPart") do
            local distance = (player.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            distanceLabel.Text = string.format("Dist√¢ncia: %.2f", distance)
            healthLabel.Text = "Vida: " .. math.floor(player.Character.Humanoid.Health)
            sittingLabel.Text = player.Character.Humanoid.Sit == true and "Sentado: Sim" or "Sentado: N√£o"

            -- Atualizar cor dinamicamente
            highlight.FillColor = CurrentColor
            nameLabel.TextColor3 = CurrentColor
            distanceLabel.TextColor3 = CurrentColor
            ageLabel.TextColor3 = CurrentColor
            healthLabel.TextColor3 = CurrentColor
            sittingLabel.TextColor3 = CurrentColor

            task.wait(0.1)
        end
    end)
end

local function toggleESP(enabled)
    ESPEnabled = enabled
    if ESPEnabled then
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer and not player.Character:FindFirstChild("ESP_Info") then
                createESP(player)
            end
        end

        game.Players.PlayerAdded:Connect(function(player)
            if ESPEnabled then
                player.CharacterAdded:Connect(function()
                    createESP(player)
                end)
            end
        end)

        game.Players.PlayerRemoving:Connect(function(player)
            if player.Character then
                if player.Character:FindFirstChild("ESP_Info") then
                    player.Character.ESP_Info:Destroy()
                end
                if player.Character:FindFirstChild("ESP_Highlight") then
                    player.Character.ESP_Highlight:Destroy()
                end
            end
        end)
    else
        for _, player in pairs(game.Players:GetPlayers()) do
            if player.Character then
                if player.Character:FindFirstChild("ESP_Info") then
                    player.Character.ESP_Info:Destroy()
                end
                if player.Character:FindFirstChild("ESP_Highlight") then
                    player.Character.ESP_Highlight:Destroy()
                end
            end
        end
    end
end

local function setESPColor(color)
    CurrentColor = color
    RainbowEnabled = false -- Desativar Rainbow ao selecionar uma cor
end

local function enableRainbow()
    RainbowEnabled = true
    task.spawn(function()
        while RainbowEnabled do
            local time = tick() * 5
            CurrentColor = Color3.fromHSV((time % 360) / 360, 1, 1)
            task.wait(0.1)
        end
    end)
end

-- Toggle para ativar/desativar ESP
Tab9:AddToggle({
    Name = "ESP",
    Default = false, -- Inicialmente desativado
    Callback = function(Value)
        toggleESP(Value)
    end
})

-- Conectar evento para reativar o ESP ap√≥s a morte
game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        -- Verificar se o ESP est√° ativado e recriar o ESP para o jogador
        if ESPEnabled then
            createESP(player)
        end
    end)
end)

-- Dropdown para sele√ß√£o de cor
Tab9:AddDropdown({
    Name = "Cores do ESP",
    Options = {"Azul", "Vermelho", "Verde", "Amarelo", "Roxo", "Cinza", "Preto", "Branco", "Laranja", "Rosa", "Marrom", "Rainbow"},
    Default = {"Branco"},
    Callback = function(selected)
        if selected == "Azul" then
            setESPColor(Color3.fromRGB(0, 0, 255))
        elseif selected == "Vermelho" then
            setESPColor(Color3.fromRGB(255, 0, 0))
        elseif selected == "Verde" then
            setESPColor(Color3.fromRGB(0, 255, 0))
        elseif selected == "Amarelo" then
            setESPColor(Color3.fromRGB(255, 255, 0))
        elseif selected == "Roxo" then
            setESPColor(Color3.fromRGB(128, 0, 128))
        elseif selected == "Cinza" then
            setESPColor(Color3.fromRGB(128, 128, 128))
        elseif selected == "Preto" then
            setESPColor(Color3.fromRGB(0, 0, 0))
        elseif selected == "Branco" then
            setESPColor(Color3.fromRGB(255, 255, 255))
        elseif selected == "Laranja" then
            setESPColor(Color3.fromRGB(255, 165, 0))
        elseif selected == "Rosa" then
            setESPColor(Color3.fromRGB(255, 192, 203))
        elseif selected == "Marrom" then
            setESPColor(Color3.fromRGB(139, 69, 19))
        elseif selected == "Rainbow" then
            enableRainbow()
        end
    end
})

local Tab10 = Window:MakeTab({Name = "Scripts", Icon = "rbxassetid://10709797725"})

local Paragraph = Tab10:AddParagraph({"#Aqui Voc√™ Encontra..", "Scripts Recomend√°veis!"})

Tab10:AddButton({
  Name = "Infinite Yield Shnmaxhub",
  Callback = function()
    loadstring(game:HttpGet('https://pastebin.com/raw/ikgPmn7C'))()
  end
})

Tab10:AddButton({
  Name = "Shaders",
  Callback = function()
    loadstring(game:HttpGet('https://pastebin.com/raw/yNDTis70'))()
  end
})

Tab10:AddButton({
  Name = "Ant Lag V2",
  Callback = function()
    loadstring(game:HttpGet(''))()
  end
})

game.Workspace.FallenPartsDestroyHeight = -math.huge
