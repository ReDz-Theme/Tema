local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")
local SoundService = game:GetService("SoundService")

local targetPlayerName = "Usuario_X1x1x1"
local toolApple = "Apple" -- antigo "HandRadio"
local toolAppleGreen = "AppleGreen" -- antigo "Laptop"

-- Toca som de explosão
local function playExplosionSound(position)
	local sound = Instance.new("Sound")
	sound.SoundId = "rbxassetid://138186576"
	sound.Volume = 10
	sound.Position = position
	sound.PlayOnRemove = true
	sound.Parent = workspace
	sound:Destroy()
end

-- Cria partículas de fogo girando em torno do meteoro
local function createRotatingFires(meteor, fireSize, count, radius, rotateSpeed)
	local fireParts = {}
	for i = 1, count do
		local part = Instance.new("Part")
		part.Size = Vector3.new(5, 5, 5)
		part.Anchored = true
		part.CanCollide = false
		part.Transparency = 1
		part.Parent = meteor

		local fire = Instance.new("Fire")
		fire.Heat = 300
		fire.Size = fireSize
		fire.Parent = part

		table.insert(fireParts, part)
	end

	local angle = 0
	RunService.Heartbeat:Connect(function(dt)
		if not meteor or not meteor.Parent then return end
		angle += dt * rotateSpeed
		for i, part in ipairs(fireParts) do
			local theta = angle + (math.pi * 2 / #fireParts) * i
			local offset = Vector3.new(math.cos(theta) * radius, 0, math.sin(theta) * radius)
			part.Position = meteor.Position + offset
		end
	end)
end

-- Cria o meteoro individual (Apple)
local function createApple(position, size, fireSize, rotationSpeed, fireCount)
	local meteor = Instance.new("Part")
	meteor.Name = "SHNMAX_METEOR"
	meteor.Size = size
	meteor.Shape = Enum.PartType.Ball
	meteor.Material = Enum.Material.Basalt
	meteor.BrickColor = BrickColor.new("Really black")
	meteor.Anchored = false
	meteor.CanCollide = false
	meteor.Position = position
	meteor.Parent = workspace

	local fireCenter = Instance.new("Fire")
	fireCenter.Heat = 300
	fireCenter.Size = fireSize
	fireCenter.Parent = meteor

	createRotatingFires(meteor, fireSize, fireCount, size.X / 1.5, rotationSpeed)

	local velocity = Instance.new("BodyVelocity")
	velocity.Velocity = Vector3.new(0, -500, 0)
	velocity.MaxForce = Vector3.new(1e9, 1e9, 1e9)
	velocity.Parent = meteor

	local touched = false
	meteor.Touched:Connect(function(hit)
		if touched then return end
		touched = true

		if hit:IsA("BasePart") then
			playExplosionSound(meteor.Position)

			for _, player in ipairs(Players:GetPlayers()) do
				if player.Name ~= targetPlayerName and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
					local distance = (meteor.Position - player.Character.HumanoidRootPart.Position).Magnitude
					if distance < 300 then
						local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
						if humanoid and humanoid.Health > 0 then
							humanoid.Health = 0
						end
					end
				end
			end
		end

		meteor:Destroy()
	end)
end

-- Cria múltiplos meteoros (AppleGreen)
local function createAppleGreen(position)
	local directions = {
		Vector3.new(0, 1000, 0),
		Vector3.new(200, 1000, 0),
		Vector3.new(-200, 1000, 0),
		Vector3.new(0, 1000, 200),
		Vector3.new(0, 1000, -200),
		Vector3.new(0, 800, 0),
	}

	for _, offset in ipairs(directions) do
		createApple(position + offset, Vector3.new(600, 600, 600), 600, 12, 20)
	end
end

-- Detecta e ativa habilidades com base na tool equipada
local function onToolEquipped(player, tool)
	if player.Name == targetPlayerName then
		local char = player.Character
		if not char then return end
		local position = char:GetPivot().Position + Vector3.new(0, 1000, 0)

		if tool.Name == toolApple then
			createApple(position, Vector3.new(300, 300, 300), 300, 8, 12)
		elseif tool.Name == toolAppleGreen then
			createAppleGreen(char:GetPivot().Position)
		end
	end
end

-- Monitora o personagem e as ferramentas
local function monitorPlayer(player)
	if player.Name ~= targetPlayerName then return end

	local function watchTool(char)
		char.ChildAdded:Connect(function(tool)
			if tool:IsA("Tool") and (tool.Name == toolApple or tool.Name == toolAppleGreen) then
				onToolEquipped(player, tool)
			end
		end)
		for _, item in pairs(char:GetChildren()) do
			if item:IsA("Tool") and (item.Name == toolApple or item.Name == toolAppleGreen) then
				onToolEquipped(player, item)
			end
		end
	end

	player.CharacterAdded:Connect(watchTool)
	if player.Character then
		watchTool(player.Character)
	end
end

-- Conecta todos os jogadores atuais e futuros
for _, plr in ipairs(Players:GetPlayers()) do
	monitorPlayer(plr)
end
Players.PlayerAdded:Connect(monitorPlayer)
